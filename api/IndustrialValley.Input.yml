### YamlMime:ManagedReference
items:
- uid: IndustrialValley.Input
  commentId: T:IndustrialValley.Input
  id: Input
  parent: IndustrialValley
  children:
  - IndustrialValley.Input.Cancel
  - IndustrialValley.Input.Duplicate
  - IndustrialValley.Input.Escape
  - IndustrialValley.Input.IsUsingController
  - IndustrialValley.Input.MousePosition
  - IndustrialValley.Input.Movement
  - IndustrialValley.Input.Place
  - IndustrialValley.Input.PlaceDown
  - IndustrialValley.Input.PlaceUp
  - IndustrialValley.Input.Player
  - IndustrialValley.Input.Rotate
  - IndustrialValley.Input.Scroll
  langs:
  - csharp
  - vb
  name: Input
  nameWithType: Input
  fullName: IndustrialValley.Input
  type: Class
  source:
    id: Input
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Input.cs
    startLine: 5
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley
  syntax:
    content: public static class Input
    content.vb: Public Module Input
  inheritance:
  - System.Object
- uid: IndustrialValley.Input.IsUsingController
  commentId: P:IndustrialValley.Input.IsUsingController
  id: IsUsingController
  parent: IndustrialValley.Input
  langs:
  - csharp
  - vb
  name: IsUsingController
  nameWithType: Input.IsUsingController
  fullName: IndustrialValley.Input.IsUsingController
  type: Property
  source:
    id: IsUsingController
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Input.cs
    startLine: 11
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley
  syntax:
    content: public static bool IsUsingController { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsUsingController As Boolean
  overload: IndustrialValley.Input.IsUsingController*
- uid: IndustrialValley.Input.Player
  commentId: P:IndustrialValley.Input.Player
  id: Player
  parent: IndustrialValley.Input
  langs:
  - csharp
  - vb
  name: Player
  nameWithType: Input.Player
  fullName: IndustrialValley.Input.Player
  type: Property
  source:
    id: Player
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Input.cs
    startLine: 12
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley
  syntax:
    content: public static InputActions.PlayerActions Player { get; }
    parameters: []
    return:
      type: InputActions.PlayerActions
    content.vb: Public Shared ReadOnly Property Player As InputActions.PlayerActions
  overload: IndustrialValley.Input.Player*
- uid: IndustrialValley.Input.MousePosition
  commentId: P:IndustrialValley.Input.MousePosition
  id: MousePosition
  parent: IndustrialValley.Input
  langs:
  - csharp
  - vb
  name: MousePosition
  nameWithType: Input.MousePosition
  fullName: IndustrialValley.Input.MousePosition
  type: Property
  source:
    id: MousePosition
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Input.cs
    startLine: 17
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley
  summary: Returns the current mouse position in screen coordinates.
  example: []
  syntax:
    content: public static Vector2 MousePosition { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public Shared ReadOnly Property MousePosition As Vector2
  overload: IndustrialValley.Input.MousePosition*
- uid: IndustrialValley.Input.Movement
  commentId: P:IndustrialValley.Input.Movement
  id: Movement
  parent: IndustrialValley.Input
  langs:
  - csharp
  - vb
  name: Movement
  nameWithType: Input.Movement
  fullName: IndustrialValley.Input.Movement
  type: Property
  source:
    id: Movement
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Input.cs
    startLine: 22
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley
  summary: Horizontal and Vertical movement inputs
  example: []
  syntax:
    content: public static Vector2 Movement { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public Shared ReadOnly Property Movement As Vector2
  overload: IndustrialValley.Input.Movement*
- uid: IndustrialValley.Input.Place
  commentId: P:IndustrialValley.Input.Place
  id: Place
  parent: IndustrialValley.Input
  langs:
  - csharp
  - vb
  name: Place
  nameWithType: Input.Place
  fullName: IndustrialValley.Input.Place
  type: Property
  source:
    id: Place
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Input.cs
    startLine: 24
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley
  syntax:
    content: public static bool Place { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property Place As Boolean
  overload: IndustrialValley.Input.Place*
- uid: IndustrialValley.Input.PlaceDown
  commentId: P:IndustrialValley.Input.PlaceDown
  id: PlaceDown
  parent: IndustrialValley.Input
  langs:
  - csharp
  - vb
  name: PlaceDown
  nameWithType: Input.PlaceDown
  fullName: IndustrialValley.Input.PlaceDown
  type: Property
  source:
    id: PlaceDown
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Input.cs
    startLine: 26
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley
  syntax:
    content: public static bool PlaceDown { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property PlaceDown As Boolean
  overload: IndustrialValley.Input.PlaceDown*
- uid: IndustrialValley.Input.PlaceUp
  commentId: P:IndustrialValley.Input.PlaceUp
  id: PlaceUp
  parent: IndustrialValley.Input
  langs:
  - csharp
  - vb
  name: PlaceUp
  nameWithType: Input.PlaceUp
  fullName: IndustrialValley.Input.PlaceUp
  type: Property
  source:
    id: PlaceUp
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Input.cs
    startLine: 27
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley
  syntax:
    content: public static bool PlaceUp { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property PlaceUp As Boolean
  overload: IndustrialValley.Input.PlaceUp*
- uid: IndustrialValley.Input.Cancel
  commentId: P:IndustrialValley.Input.Cancel
  id: Cancel
  parent: IndustrialValley.Input
  langs:
  - csharp
  - vb
  name: Cancel
  nameWithType: Input.Cancel
  fullName: IndustrialValley.Input.Cancel
  type: Property
  source:
    id: Cancel
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Input.cs
    startLine: 29
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley
  syntax:
    content: public static bool Cancel { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property Cancel As Boolean
  overload: IndustrialValley.Input.Cancel*
- uid: IndustrialValley.Input.Rotate
  commentId: P:IndustrialValley.Input.Rotate
  id: Rotate
  parent: IndustrialValley.Input
  langs:
  - csharp
  - vb
  name: Rotate
  nameWithType: Input.Rotate
  fullName: IndustrialValley.Input.Rotate
  type: Property
  source:
    id: Rotate
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Input.cs
    startLine: 31
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley
  syntax:
    content: public static bool Rotate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property Rotate As Boolean
  overload: IndustrialValley.Input.Rotate*
- uid: IndustrialValley.Input.Scroll
  commentId: P:IndustrialValley.Input.Scroll
  id: Scroll
  parent: IndustrialValley.Input
  langs:
  - csharp
  - vb
  name: Scroll
  nameWithType: Input.Scroll
  fullName: IndustrialValley.Input.Scroll
  type: Property
  source:
    id: Scroll
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Input.cs
    startLine: 33
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley
  syntax:
    content: public static float Scroll { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly Property Scroll As Single
  overload: IndustrialValley.Input.Scroll*
- uid: IndustrialValley.Input.Escape
  commentId: P:IndustrialValley.Input.Escape
  id: Escape
  parent: IndustrialValley.Input
  langs:
  - csharp
  - vb
  name: Escape
  nameWithType: Input.Escape
  fullName: IndustrialValley.Input.Escape
  type: Property
  source:
    id: Escape
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Input.cs
    startLine: 35
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley
  syntax:
    content: public static bool Escape { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property Escape As Boolean
  overload: IndustrialValley.Input.Escape*
- uid: IndustrialValley.Input.Duplicate
  commentId: P:IndustrialValley.Input.Duplicate
  id: Duplicate
  parent: IndustrialValley.Input
  langs:
  - csharp
  - vb
  name: Duplicate
  nameWithType: Input.Duplicate
  fullName: IndustrialValley.Input.Duplicate
  type: Property
  source:
    id: Duplicate
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Input.cs
    startLine: 37
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley
  syntax:
    content: public static bool Duplicate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property Duplicate As Boolean
  overload: IndustrialValley.Input.Duplicate*
references:
- uid: IndustrialValley
  commentId: N:IndustrialValley
  href: IndustrialValley.html
  name: IndustrialValley
  nameWithType: IndustrialValley
  fullName: IndustrialValley
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: IndustrialValley.Input.IsUsingController*
  commentId: Overload:IndustrialValley.Input.IsUsingController
  href: IndustrialValley.Input.html#IndustrialValley_Input_IsUsingController
  name: IsUsingController
  nameWithType: Input.IsUsingController
  fullName: IndustrialValley.Input.IsUsingController
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: IndustrialValley.Input.Player*
  commentId: Overload:IndustrialValley.Input.Player
  href: IndustrialValley.Input.html#IndustrialValley_Input_Player
  name: Player
  nameWithType: Input.Player
  fullName: IndustrialValley.Input.Player
- uid: InputActions.PlayerActions
  commentId: T:InputActions.PlayerActions
  href: InputActions.html
  name: InputActions.PlayerActions
  nameWithType: InputActions.PlayerActions
  fullName: InputActions.PlayerActions
  spec.csharp:
  - uid: InputActions
    name: InputActions
    href: InputActions.html
  - name: .
  - uid: InputActions.PlayerActions
    name: PlayerActions
    href: InputActions.PlayerActions.html
  spec.vb:
  - uid: InputActions
    name: InputActions
    href: InputActions.html
  - name: .
  - uid: InputActions.PlayerActions
    name: PlayerActions
    href: InputActions.PlayerActions.html
- uid: IndustrialValley.Input.MousePosition*
  commentId: Overload:IndustrialValley.Input.MousePosition
  href: IndustrialValley.Input.html#IndustrialValley_Input_MousePosition
  name: MousePosition
  nameWithType: Input.MousePosition
  fullName: IndustrialValley.Input.MousePosition
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: IndustrialValley.Input.Movement*
  commentId: Overload:IndustrialValley.Input.Movement
  href: IndustrialValley.Input.html#IndustrialValley_Input_Movement
  name: Movement
  nameWithType: Input.Movement
  fullName: IndustrialValley.Input.Movement
- uid: IndustrialValley.Input.Place*
  commentId: Overload:IndustrialValley.Input.Place
  href: IndustrialValley.Input.html#IndustrialValley_Input_Place
  name: Place
  nameWithType: Input.Place
  fullName: IndustrialValley.Input.Place
- uid: IndustrialValley.Input.PlaceDown*
  commentId: Overload:IndustrialValley.Input.PlaceDown
  href: IndustrialValley.Input.html#IndustrialValley_Input_PlaceDown
  name: PlaceDown
  nameWithType: Input.PlaceDown
  fullName: IndustrialValley.Input.PlaceDown
- uid: IndustrialValley.Input.PlaceUp*
  commentId: Overload:IndustrialValley.Input.PlaceUp
  href: IndustrialValley.Input.html#IndustrialValley_Input_PlaceUp
  name: PlaceUp
  nameWithType: Input.PlaceUp
  fullName: IndustrialValley.Input.PlaceUp
- uid: IndustrialValley.Input.Cancel*
  commentId: Overload:IndustrialValley.Input.Cancel
  href: IndustrialValley.Input.html#IndustrialValley_Input_Cancel
  name: Cancel
  nameWithType: Input.Cancel
  fullName: IndustrialValley.Input.Cancel
- uid: IndustrialValley.Input.Rotate*
  commentId: Overload:IndustrialValley.Input.Rotate
  href: IndustrialValley.Input.html#IndustrialValley_Input_Rotate
  name: Rotate
  nameWithType: Input.Rotate
  fullName: IndustrialValley.Input.Rotate
- uid: IndustrialValley.Input.Scroll*
  commentId: Overload:IndustrialValley.Input.Scroll
  href: IndustrialValley.Input.html#IndustrialValley_Input_Scroll
  name: Scroll
  nameWithType: Input.Scroll
  fullName: IndustrialValley.Input.Scroll
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: IndustrialValley.Input.Escape*
  commentId: Overload:IndustrialValley.Input.Escape
  href: IndustrialValley.Input.html#IndustrialValley_Input_Escape
  name: Escape
  nameWithType: Input.Escape
  fullName: IndustrialValley.Input.Escape
- uid: IndustrialValley.Input.Duplicate*
  commentId: Overload:IndustrialValley.Input.Duplicate
  href: IndustrialValley.Input.html#IndustrialValley_Input_Duplicate
  name: Duplicate
  nameWithType: Input.Duplicate
  fullName: IndustrialValley.Input.Duplicate
