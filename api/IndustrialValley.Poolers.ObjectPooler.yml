### YamlMime:ManagedReference
items:
- uid: IndustrialValley.Poolers.ObjectPooler
  commentId: T:IndustrialValley.Poolers.ObjectPooler
  id: ObjectPooler
  parent: IndustrialValley.Poolers
  children:
  - IndustrialValley.Poolers.ObjectPooler.DelayDespawn(UnityEngine.GameObject,System.Single)
  - IndustrialValley.Poolers.ObjectPooler.Get(UnityEngine.GameObject)
  - IndustrialValley.Poolers.ObjectPooler.Get(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  - IndustrialValley.Poolers.ObjectPooler.GetAndPlayParticle(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  - IndustrialValley.Poolers.ObjectPooler.GetParticle(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  - IndustrialValley.Poolers.ObjectPooler.Get``1(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  - IndustrialValley.Poolers.ObjectPooler.Initialized
  - IndustrialValley.Poolers.ObjectPooler.Instance
  - IndustrialValley.Poolers.ObjectPooler.NewItem(UnityEngine.GameObject,System.Int32)
  - IndustrialValley.Poolers.ObjectPooler.PoolItems
  - IndustrialValley.Poolers.ObjectPooler.Put(UnityEngine.GameObject)
  - IndustrialValley.Poolers.ObjectPooler.Put(UnityEngine.GameObject,System.Int32)
  - IndustrialValley.Poolers.ObjectPooler.Put(UnityEngine.GameObject,System.Single)
  - IndustrialValley.Poolers.ObjectPooler.PutParticle(IndustrialValley.Poolers.ParticleObject)
  - IndustrialValley.Poolers.ObjectPooler.PutParticle(UnityEngine.GameObject)
  langs:
  - csharp
  - vb
  name: ObjectPooler
  nameWithType: ObjectPooler
  fullName: IndustrialValley.Poolers.ObjectPooler
  type: Class
  source:
    id: ObjectPooler
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 15
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: 'public class ObjectPooler : MonoBehaviour'
    content.vb: Public Class ObjectPooler Inherits MonoBehaviour
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
- uid: IndustrialValley.Poolers.ObjectPooler.PoolItems
  commentId: F:IndustrialValley.Poolers.ObjectPooler.PoolItems
  id: PoolItems
  parent: IndustrialValley.Poolers.ObjectPooler
  langs:
  - csharp
  - vb
  name: PoolItems
  nameWithType: ObjectPooler.PoolItems
  fullName: IndustrialValley.Poolers.ObjectPooler.PoolItems
  type: Field
  source:
    id: PoolItems
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 17
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: public List<PoolingItem> PoolItems
    return:
      type: System.Collections.Generic.List{IndustrialValley.Poolers.PoolingItem}
    content.vb: Public PoolItems As List(Of PoolingItem)
- uid: IndustrialValley.Poolers.ObjectPooler.Instance
  commentId: P:IndustrialValley.Poolers.ObjectPooler.Instance
  id: Instance
  parent: IndustrialValley.Poolers.ObjectPooler
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: ObjectPooler.Instance
  fullName: IndustrialValley.Poolers.ObjectPooler.Instance
  type: Property
  source:
    id: Instance
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 20
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: public static ObjectPooler Instance { get; }
    parameters: []
    return:
      type: IndustrialValley.Poolers.ObjectPooler
    content.vb: Public Shared Property Instance As ObjectPooler
  overload: IndustrialValley.Poolers.ObjectPooler.Instance*
- uid: IndustrialValley.Poolers.ObjectPooler.Initialized
  commentId: M:IndustrialValley.Poolers.ObjectPooler.Initialized
  id: Initialized
  parent: IndustrialValley.Poolers.ObjectPooler
  langs:
  - csharp
  - vb
  name: Initialized()
  nameWithType: ObjectPooler.Initialized()
  fullName: IndustrialValley.Poolers.ObjectPooler.Initialized()
  type: Method
  source:
    id: Initialized
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 49
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: protected virtual void Initialized()
    content.vb: Protected Overridable Sub Initialized()
  overload: IndustrialValley.Poolers.ObjectPooler.Initialized*
- uid: IndustrialValley.Poolers.ObjectPooler.Get``1(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:IndustrialValley.Poolers.ObjectPooler.Get``1(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  id: Get``1(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: IndustrialValley.Poolers.ObjectPooler
  langs:
  - csharp
  - vb
  name: Get<T>(GameObject, Vector3, Quaternion)
  nameWithType: ObjectPooler.Get<T>(GameObject, Vector3, Quaternion)
  fullName: IndustrialValley.Poolers.ObjectPooler.Get<T>(UnityEngine.GameObject, UnityEngine.Vector3, UnityEngine.Quaternion)
  type: Method
  source:
    id: Get
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 55
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: public static T Get<T>(GameObject prefab, Vector3 pos, Quaternion rot)
    parameters:
    - id: prefab
      type: UnityEngine.GameObject
    - id: pos
      type: UnityEngine.Vector3
    - id: rot
      type: UnityEngine.Quaternion
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function [Get](Of T)(prefab As GameObject, pos As Vector3, rot As Quaternion) As T
  overload: IndustrialValley.Poolers.ObjectPooler.Get*
  nameWithType.vb: ObjectPooler.Get(Of T)(GameObject, Vector3, Quaternion)
  fullName.vb: IndustrialValley.Poolers.ObjectPooler.Get(Of T)(UnityEngine.GameObject, UnityEngine.Vector3, UnityEngine.Quaternion)
  name.vb: Get(Of T)(GameObject, Vector3, Quaternion)
- uid: IndustrialValley.Poolers.ObjectPooler.PutParticle(IndustrialValley.Poolers.ParticleObject)
  commentId: M:IndustrialValley.Poolers.ObjectPooler.PutParticle(IndustrialValley.Poolers.ParticleObject)
  id: PutParticle(IndustrialValley.Poolers.ParticleObject)
  parent: IndustrialValley.Poolers.ObjectPooler
  langs:
  - csharp
  - vb
  name: PutParticle(ParticleObject)
  nameWithType: ObjectPooler.PutParticle(ParticleObject)
  fullName: IndustrialValley.Poolers.ObjectPooler.PutParticle(IndustrialValley.Poolers.ParticleObject)
  type: Method
  source:
    id: PutParticle
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 68
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: public static void PutParticle(ParticleObject prefab)
    parameters:
    - id: prefab
      type: IndustrialValley.Poolers.ParticleObject
    content.vb: Public Shared Sub PutParticle(prefab As ParticleObject)
  overload: IndustrialValley.Poolers.ObjectPooler.PutParticle*
- uid: IndustrialValley.Poolers.ObjectPooler.PutParticle(UnityEngine.GameObject)
  commentId: M:IndustrialValley.Poolers.ObjectPooler.PutParticle(UnityEngine.GameObject)
  id: PutParticle(UnityEngine.GameObject)
  parent: IndustrialValley.Poolers.ObjectPooler
  langs:
  - csharp
  - vb
  name: PutParticle(GameObject)
  nameWithType: ObjectPooler.PutParticle(GameObject)
  fullName: IndustrialValley.Poolers.ObjectPooler.PutParticle(UnityEngine.GameObject)
  type: Method
  source:
    id: PutParticle
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 76
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: public static void PutParticle(GameObject prefab)
    parameters:
    - id: prefab
      type: UnityEngine.GameObject
    content.vb: Public Shared Sub PutParticle(prefab As GameObject)
  overload: IndustrialValley.Poolers.ObjectPooler.PutParticle*
- uid: IndustrialValley.Poolers.ObjectPooler.GetParticle(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:IndustrialValley.Poolers.ObjectPooler.GetParticle(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  id: GetParticle(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: IndustrialValley.Poolers.ObjectPooler
  langs:
  - csharp
  - vb
  name: GetParticle(GameObject, Vector3, Quaternion)
  nameWithType: ObjectPooler.GetParticle(GameObject, Vector3, Quaternion)
  fullName: IndustrialValley.Poolers.ObjectPooler.GetParticle(UnityEngine.GameObject, UnityEngine.Vector3, UnityEngine.Quaternion)
  type: Method
  source:
    id: GetParticle
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 84
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: public static ParticleObject GetParticle(GameObject prefab, Vector3 pos, Quaternion rot = default)
    parameters:
    - id: prefab
      type: UnityEngine.GameObject
    - id: pos
      type: UnityEngine.Vector3
    - id: rot
      type: UnityEngine.Quaternion
    return:
      type: IndustrialValley.Poolers.ParticleObject
    content.vb: Public Shared Function GetParticle(prefab As GameObject, pos As Vector3, rot As Quaternion = Nothing) As ParticleObject
  overload: IndustrialValley.Poolers.ObjectPooler.GetParticle*
- uid: IndustrialValley.Poolers.ObjectPooler.GetAndPlayParticle(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:IndustrialValley.Poolers.ObjectPooler.GetAndPlayParticle(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  id: GetAndPlayParticle(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: IndustrialValley.Poolers.ObjectPooler
  langs:
  - csharp
  - vb
  name: GetAndPlayParticle(GameObject, Vector3, Quaternion)
  nameWithType: ObjectPooler.GetAndPlayParticle(GameObject, Vector3, Quaternion)
  fullName: IndustrialValley.Poolers.ObjectPooler.GetAndPlayParticle(UnityEngine.GameObject, UnityEngine.Vector3, UnityEngine.Quaternion)
  type: Method
  source:
    id: GetAndPlayParticle
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 90
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: public static ParticleObject GetAndPlayParticle(GameObject prefab, Vector3 pos, Quaternion rot = default)
    parameters:
    - id: prefab
      type: UnityEngine.GameObject
    - id: pos
      type: UnityEngine.Vector3
    - id: rot
      type: UnityEngine.Quaternion
    return:
      type: IndustrialValley.Poolers.ParticleObject
    content.vb: Public Shared Function GetAndPlayParticle(prefab As GameObject, pos As Vector3, rot As Quaternion = Nothing) As ParticleObject
  overload: IndustrialValley.Poolers.ObjectPooler.GetAndPlayParticle*
- uid: IndustrialValley.Poolers.ObjectPooler.Get(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  commentId: M:IndustrialValley.Poolers.ObjectPooler.Get(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  id: Get(UnityEngine.GameObject,UnityEngine.Vector3,UnityEngine.Quaternion)
  parent: IndustrialValley.Poolers.ObjectPooler
  langs:
  - csharp
  - vb
  name: Get(GameObject, Vector3, Quaternion)
  nameWithType: ObjectPooler.Get(GameObject, Vector3, Quaternion)
  fullName: IndustrialValley.Poolers.ObjectPooler.Get(UnityEngine.GameObject, UnityEngine.Vector3, UnityEngine.Quaternion)
  type: Method
  source:
    id: Get
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 98
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: public static GameObject Get(GameObject prefab, Vector3 pos, Quaternion rot)
    parameters:
    - id: prefab
      type: UnityEngine.GameObject
    - id: pos
      type: UnityEngine.Vector3
    - id: rot
      type: UnityEngine.Quaternion
    return:
      type: UnityEngine.GameObject
    content.vb: Public Shared Function [Get](prefab As GameObject, pos As Vector3, rot As Quaternion) As GameObject
  overload: IndustrialValley.Poolers.ObjectPooler.Get*
- uid: IndustrialValley.Poolers.ObjectPooler.Get(UnityEngine.GameObject)
  commentId: M:IndustrialValley.Poolers.ObjectPooler.Get(UnityEngine.GameObject)
  id: Get(UnityEngine.GameObject)
  parent: IndustrialValley.Poolers.ObjectPooler
  langs:
  - csharp
  - vb
  name: Get(GameObject)
  nameWithType: ObjectPooler.Get(GameObject)
  fullName: IndustrialValley.Poolers.ObjectPooler.Get(UnityEngine.GameObject)
  type: Method
  source:
    id: Get
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 109
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: public static GameObject Get(GameObject prefab)
    parameters:
    - id: prefab
      type: UnityEngine.GameObject
    return:
      type: UnityEngine.GameObject
    content.vb: Public Shared Function [Get](prefab As GameObject) As GameObject
  overload: IndustrialValley.Poolers.ObjectPooler.Get*
- uid: IndustrialValley.Poolers.ObjectPooler.Put(UnityEngine.GameObject)
  commentId: M:IndustrialValley.Poolers.ObjectPooler.Put(UnityEngine.GameObject)
  id: Put(UnityEngine.GameObject)
  parent: IndustrialValley.Poolers.ObjectPooler
  langs:
  - csharp
  - vb
  name: Put(GameObject)
  nameWithType: ObjectPooler.Put(GameObject)
  fullName: IndustrialValley.Poolers.ObjectPooler.Put(UnityEngine.GameObject)
  type: Method
  source:
    id: Put
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 125
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: public static void Put(GameObject prefab)
    parameters:
    - id: prefab
      type: UnityEngine.GameObject
    content.vb: Public Shared Sub Put(prefab As GameObject)
  overload: IndustrialValley.Poolers.ObjectPooler.Put*
- uid: IndustrialValley.Poolers.ObjectPooler.Put(UnityEngine.GameObject,System.Int32)
  commentId: M:IndustrialValley.Poolers.ObjectPooler.Put(UnityEngine.GameObject,System.Int32)
  id: Put(UnityEngine.GameObject,System.Int32)
  parent: IndustrialValley.Poolers.ObjectPooler
  langs:
  - csharp
  - vb
  name: Put(GameObject, int)
  nameWithType: ObjectPooler.Put(GameObject, int)
  fullName: IndustrialValley.Poolers.ObjectPooler.Put(UnityEngine.GameObject, int)
  type: Method
  source:
    id: Put
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 130
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: public static void Put(GameObject prefab, int delay)
    parameters:
    - id: prefab
      type: UnityEngine.GameObject
    - id: delay
      type: System.Int32
    content.vb: Public Shared Sub Put(prefab As GameObject, delay As Integer)
  overload: IndustrialValley.Poolers.ObjectPooler.Put*
  nameWithType.vb: ObjectPooler.Put(GameObject, Integer)
  fullName.vb: IndustrialValley.Poolers.ObjectPooler.Put(UnityEngine.GameObject, Integer)
  name.vb: Put(GameObject, Integer)
- uid: IndustrialValley.Poolers.ObjectPooler.Put(UnityEngine.GameObject,System.Single)
  commentId: M:IndustrialValley.Poolers.ObjectPooler.Put(UnityEngine.GameObject,System.Single)
  id: Put(UnityEngine.GameObject,System.Single)
  parent: IndustrialValley.Poolers.ObjectPooler
  langs:
  - csharp
  - vb
  name: Put(GameObject, float)
  nameWithType: ObjectPooler.Put(GameObject, float)
  fullName: IndustrialValley.Poolers.ObjectPooler.Put(UnityEngine.GameObject, float)
  type: Method
  source:
    id: Put
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 135
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: public static void Put(GameObject prefab, float delay)
    parameters:
    - id: prefab
      type: UnityEngine.GameObject
    - id: delay
      type: System.Single
    content.vb: Public Shared Sub Put(prefab As GameObject, delay As Single)
  overload: IndustrialValley.Poolers.ObjectPooler.Put*
  nameWithType.vb: ObjectPooler.Put(GameObject, Single)
  fullName.vb: IndustrialValley.Poolers.ObjectPooler.Put(UnityEngine.GameObject, Single)
  name.vb: Put(GameObject, Single)
- uid: IndustrialValley.Poolers.ObjectPooler.DelayDespawn(UnityEngine.GameObject,System.Single)
  commentId: M:IndustrialValley.Poolers.ObjectPooler.DelayDespawn(UnityEngine.GameObject,System.Single)
  id: DelayDespawn(UnityEngine.GameObject,System.Single)
  parent: IndustrialValley.Poolers.ObjectPooler
  langs:
  - csharp
  - vb
  name: DelayDespawn(GameObject, float)
  nameWithType: ObjectPooler.DelayDespawn(GameObject, float)
  fullName: IndustrialValley.Poolers.ObjectPooler.DelayDespawn(UnityEngine.GameObject, float)
  type: Method
  source:
    id: DelayDespawn
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 140
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: protected static void DelayDespawn(GameObject prefab, float delay)
    parameters:
    - id: prefab
      type: UnityEngine.GameObject
    - id: delay
      type: System.Single
    content.vb: Protected Shared Sub DelayDespawn(prefab As GameObject, delay As Single)
  overload: IndustrialValley.Poolers.ObjectPooler.DelayDespawn*
  nameWithType.vb: ObjectPooler.DelayDespawn(GameObject, Single)
  fullName.vb: IndustrialValley.Poolers.ObjectPooler.DelayDespawn(UnityEngine.GameObject, Single)
  name.vb: DelayDespawn(GameObject, Single)
- uid: IndustrialValley.Poolers.ObjectPooler.NewItem(UnityEngine.GameObject,System.Int32)
  commentId: M:IndustrialValley.Poolers.ObjectPooler.NewItem(UnityEngine.GameObject,System.Int32)
  id: NewItem(UnityEngine.GameObject,System.Int32)
  parent: IndustrialValley.Poolers.ObjectPooler
  langs:
  - csharp
  - vb
  name: NewItem(GameObject, int)
  nameWithType: ObjectPooler.NewItem(GameObject, int)
  fullName: IndustrialValley.Poolers.ObjectPooler.NewItem(UnityEngine.GameObject, int)
  type: Method
  source:
    id: NewItem
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Pooling\ObjectPooler.cs
    startLine: 159
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Poolers
  syntax:
    content: protected void NewItem(GameObject go, int poolSize = 10)
    parameters:
    - id: go
      type: UnityEngine.GameObject
    - id: poolSize
      type: System.Int32
    content.vb: Protected Sub NewItem(go As GameObject, poolSize As Integer = 10)
  overload: IndustrialValley.Poolers.ObjectPooler.NewItem*
  nameWithType.vb: ObjectPooler.NewItem(GameObject, Integer)
  fullName.vb: IndustrialValley.Poolers.ObjectPooler.NewItem(UnityEngine.GameObject, Integer)
  name.vb: NewItem(GameObject, Integer)
references:
- uid: IndustrialValley.Poolers
  commentId: N:IndustrialValley.Poolers
  href: IndustrialValley.html
  name: IndustrialValley.Poolers
  nameWithType: IndustrialValley.Poolers
  fullName: IndustrialValley.Poolers
  spec.csharp:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Poolers
    name: Poolers
    href: IndustrialValley.Poolers.html
  spec.vb:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Poolers
    name: Poolers
    href: IndustrialValley.Poolers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: System.Collections.Generic.List{IndustrialValley.Poolers.PoolingItem}
  commentId: T:System.Collections.Generic.List{IndustrialValley.Poolers.PoolingItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: IndustrialValley.Poolers.PoolingItem.html
  name: List<PoolingItem>
  nameWithType: List<PoolingItem>
  fullName: System.Collections.Generic.List<IndustrialValley.Poolers.PoolingItem>
  nameWithType.vb: List(Of PoolingItem)
  fullName.vb: System.Collections.Generic.List(Of IndustrialValley.Poolers.PoolingItem)
  name.vb: List(Of PoolingItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - uid: IndustrialValley.Poolers.PoolingItem
    name: PoolingItem
    href: IndustrialValley.Poolers.PoolingItem.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: IndustrialValley.Poolers.PoolingItem
    name: PoolingItem
    href: IndustrialValley.Poolers.PoolingItem.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: IndustrialValley.Poolers.ObjectPooler.Instance*
  commentId: Overload:IndustrialValley.Poolers.ObjectPooler.Instance
  href: IndustrialValley.Poolers.ObjectPooler.html#IndustrialValley_Poolers_ObjectPooler_Instance
  name: Instance
  nameWithType: ObjectPooler.Instance
  fullName: IndustrialValley.Poolers.ObjectPooler.Instance
- uid: IndustrialValley.Poolers.ObjectPooler
  commentId: T:IndustrialValley.Poolers.ObjectPooler
  parent: IndustrialValley.Poolers
  href: IndustrialValley.Poolers.ObjectPooler.html
  name: ObjectPooler
  nameWithType: ObjectPooler
  fullName: IndustrialValley.Poolers.ObjectPooler
- uid: IndustrialValley.Poolers.ObjectPooler.Initialized*
  commentId: Overload:IndustrialValley.Poolers.ObjectPooler.Initialized
  href: IndustrialValley.Poolers.ObjectPooler.html#IndustrialValley_Poolers_ObjectPooler_Initialized
  name: Initialized
  nameWithType: ObjectPooler.Initialized
  fullName: IndustrialValley.Poolers.ObjectPooler.Initialized
- uid: IndustrialValley.Poolers.ObjectPooler.Get*
  commentId: Overload:IndustrialValley.Poolers.ObjectPooler.Get
  href: IndustrialValley.Poolers.ObjectPooler.html#IndustrialValley_Poolers_ObjectPooler_Get__1_UnityEngine_GameObject_UnityEngine_Vector3_UnityEngine_Quaternion_
  name: Get
  nameWithType: ObjectPooler.Get
  fullName: IndustrialValley.Poolers.ObjectPooler.Get
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: UnityEngine.Quaternion
  commentId: T:UnityEngine.Quaternion
  parent: UnityEngine
  isExternal: true
  name: Quaternion
  nameWithType: Quaternion
  fullName: UnityEngine.Quaternion
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: IndustrialValley.Poolers.ObjectPooler.PutParticle*
  commentId: Overload:IndustrialValley.Poolers.ObjectPooler.PutParticle
  href: IndustrialValley.Poolers.ObjectPooler.html#IndustrialValley_Poolers_ObjectPooler_PutParticle_IndustrialValley_Poolers_ParticleObject_
  name: PutParticle
  nameWithType: ObjectPooler.PutParticle
  fullName: IndustrialValley.Poolers.ObjectPooler.PutParticle
- uid: IndustrialValley.Poolers.ParticleObject
  commentId: T:IndustrialValley.Poolers.ParticleObject
  parent: IndustrialValley.Poolers
  href: IndustrialValley.Poolers.ParticleObject.html
  name: ParticleObject
  nameWithType: ParticleObject
  fullName: IndustrialValley.Poolers.ParticleObject
- uid: IndustrialValley.Poolers.ObjectPooler.GetParticle*
  commentId: Overload:IndustrialValley.Poolers.ObjectPooler.GetParticle
  href: IndustrialValley.Poolers.ObjectPooler.html#IndustrialValley_Poolers_ObjectPooler_GetParticle_UnityEngine_GameObject_UnityEngine_Vector3_UnityEngine_Quaternion_
  name: GetParticle
  nameWithType: ObjectPooler.GetParticle
  fullName: IndustrialValley.Poolers.ObjectPooler.GetParticle
- uid: IndustrialValley.Poolers.ObjectPooler.GetAndPlayParticle*
  commentId: Overload:IndustrialValley.Poolers.ObjectPooler.GetAndPlayParticle
  href: IndustrialValley.Poolers.ObjectPooler.html#IndustrialValley_Poolers_ObjectPooler_GetAndPlayParticle_UnityEngine_GameObject_UnityEngine_Vector3_UnityEngine_Quaternion_
  name: GetAndPlayParticle
  nameWithType: ObjectPooler.GetAndPlayParticle
  fullName: IndustrialValley.Poolers.ObjectPooler.GetAndPlayParticle
- uid: IndustrialValley.Poolers.ObjectPooler.Put*
  commentId: Overload:IndustrialValley.Poolers.ObjectPooler.Put
  href: IndustrialValley.Poolers.ObjectPooler.html#IndustrialValley_Poolers_ObjectPooler_Put_UnityEngine_GameObject_
  name: Put
  nameWithType: ObjectPooler.Put
  fullName: IndustrialValley.Poolers.ObjectPooler.Put
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: IndustrialValley.Poolers.ObjectPooler.DelayDespawn*
  commentId: Overload:IndustrialValley.Poolers.ObjectPooler.DelayDespawn
  href: IndustrialValley.Poolers.ObjectPooler.html#IndustrialValley_Poolers_ObjectPooler_DelayDespawn_UnityEngine_GameObject_System_Single_
  name: DelayDespawn
  nameWithType: ObjectPooler.DelayDespawn
  fullName: IndustrialValley.Poolers.ObjectPooler.DelayDespawn
- uid: IndustrialValley.Poolers.ObjectPooler.NewItem*
  commentId: Overload:IndustrialValley.Poolers.ObjectPooler.NewItem
  href: IndustrialValley.Poolers.ObjectPooler.html#IndustrialValley_Poolers_ObjectPooler_NewItem_UnityEngine_GameObject_System_Int32_
  name: NewItem
  nameWithType: ObjectPooler.NewItem
  fullName: IndustrialValley.Poolers.ObjectPooler.NewItem
