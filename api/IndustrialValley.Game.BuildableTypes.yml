### YamlMime:ManagedReference
items:
- uid: IndustrialValley.Game.BuildableTypes
  commentId: T:IndustrialValley.Game.BuildableTypes
  id: BuildableTypes
  parent: IndustrialValley.Game
  children:
  - IndustrialValley.Game.BuildableTypes.Add(System.String)
  - IndustrialValley.Game.BuildableTypes.All
  langs:
  - csharp
  - vb
  name: BuildableTypes
  nameWithType: BuildableTypes
  fullName: IndustrialValley.Game.BuildableTypes
  type: Class
  source:
    id: BuildableTypes
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Game\BuildableTypes.cs
    startLine: 5
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Game
  syntax:
    content: public class BuildableTypes
    content.vb: Public Class BuildableTypes
  inheritance:
  - System.Object
- uid: IndustrialValley.Game.BuildableTypes.All
  commentId: P:IndustrialValley.Game.BuildableTypes.All
  id: All
  parent: IndustrialValley.Game.BuildableTypes
  langs:
  - csharp
  - vb
  name: All
  nameWithType: BuildableTypes.All
  fullName: IndustrialValley.Game.BuildableTypes.All
  type: Property
  source:
    id: All
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Game\BuildableTypes.cs
    startLine: 10
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Game
  summary: A list of all buildable types, can be modified to add custom types.
  example: []
  syntax:
    content: public HashSet<string> All { get; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{System.String}
    content.vb: Public ReadOnly Property All As HashSet(Of String)
  overload: IndustrialValley.Game.BuildableTypes.All*
- uid: IndustrialValley.Game.BuildableTypes.Add(System.String)
  commentId: M:IndustrialValley.Game.BuildableTypes.Add(System.String)
  id: Add(System.String)
  parent: IndustrialValley.Game.BuildableTypes
  langs:
  - csharp
  - vb
  name: Add(string)
  nameWithType: BuildableTypes.Add(string)
  fullName: IndustrialValley.Game.BuildableTypes.Add(string)
  type: Method
  source:
    id: Add
    path: F:\Unity Games\ClickerFactory\ClickerFactory\Assets\IndustrialValley\Scripts\Game\BuildableTypes.cs
    startLine: 17
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Game
  summary: Adds a new buildable type to the list of buildable types.
  example: []
  syntax:
    content: public void Add(string typeName)
    parameters:
    - id: typeName
      type: System.String
      description: ''
    content.vb: Public Sub Add(typeName As String)
  overload: IndustrialValley.Game.BuildableTypes.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: ''
  nameWithType.vb: BuildableTypes.Add(String)
  fullName.vb: IndustrialValley.Game.BuildableTypes.Add(String)
  name.vb: Add(String)
references:
- uid: IndustrialValley.Game
  commentId: N:IndustrialValley.Game
  href: IndustrialValley.html
  name: IndustrialValley.Game
  nameWithType: IndustrialValley.Game
  fullName: IndustrialValley.Game
  spec.csharp:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Game
    name: Game
    href: IndustrialValley.Game.html
  spec.vb:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Game
    name: Game
    href: IndustrialValley.Game.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: IndustrialValley.Game.BuildableTypes.All*
  commentId: Overload:IndustrialValley.Game.BuildableTypes.All
  href: IndustrialValley.Game.BuildableTypes.html#IndustrialValley_Game_BuildableTypes_All
  name: All
  nameWithType: BuildableTypes.All
  fullName: IndustrialValley.Game.BuildableTypes.All
- uid: System.Collections.Generic.HashSet{System.String}
  commentId: T:System.Collections.Generic.HashSet{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  name: HashSet<string>
  nameWithType: HashSet<string>
  fullName: System.Collections.Generic.HashSet<string>
  nameWithType.vb: HashSet(Of String)
  fullName.vb: System.Collections.Generic.HashSet(Of String)
  name.vb: HashSet(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: <
  - uid: System.String
    name: string
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
  spec.vb:
  - uid: System
    name: System
    isExternal: true
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: IndustrialValley.Game.BuildableTypes.Add*
  commentId: Overload:IndustrialValley.Game.BuildableTypes.Add
  href: IndustrialValley.Game.BuildableTypes.html#IndustrialValley_Game_BuildableTypes_Add_System_String_
  name: Add
  nameWithType: BuildableTypes.Add
  fullName: IndustrialValley.Game.BuildableTypes.Add
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
