### YamlMime:ManagedReference
items:
- uid: IndustrialValley.Helpers.UIBuilder
  commentId: T:IndustrialValley.Helpers.UIBuilder
  id: UIBuilder
  parent: IndustrialValley.Helpers
  children:
  - IndustrialValley.Helpers.UIBuilder.#ctor(UnityEngine.UIElements.VisualElement)
  - IndustrialValley.Helpers.UIBuilder.AddElement``1(``0,System.String)
  - IndustrialValley.Helpers.UIBuilder.AddImage(UnityEngine.Sprite,System.String)
  - IndustrialValley.Helpers.UIBuilder.AddImage(UnityEngine.Texture2D,System.String)
  - IndustrialValley.Helpers.UIBuilder.AddLabel(System.String,System.String)
  - IndustrialValley.Helpers.UIBuilder.AddUI(IndustrialValley.Helpers.UIBuilder)
  - IndustrialValley.Helpers.UIBuilder.Create
  - IndustrialValley.Helpers.UIBuilder.Create(System.String)
  - IndustrialValley.Helpers.UIBuilder.Elem
  - IndustrialValley.Helpers.UIBuilder.StyleAll(System.String,System.Action{UnityEngine.UIElements.VisualElement})
  - IndustrialValley.Helpers.UIBuilder.StyleAll``1(System.Action{``0})
  langs:
  - csharp
  - vb
  name: UIBuilder
  nameWithType: UIBuilder
  fullName: IndustrialValley.Helpers.UIBuilder
  type: Class
  source:
    id: UIBuilder
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Helpers\UIBuilder.cs
    startLine: 6
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Helpers
  syntax:
    content: public class UIBuilder
    content.vb: Public Class UIBuilder
  inheritance:
  - System.Object
- uid: IndustrialValley.Helpers.UIBuilder.#ctor(UnityEngine.UIElements.VisualElement)
  commentId: M:IndustrialValley.Helpers.UIBuilder.#ctor(UnityEngine.UIElements.VisualElement)
  id: '#ctor(UnityEngine.UIElements.VisualElement)'
  parent: IndustrialValley.Helpers.UIBuilder
  langs:
  - csharp
  - vb
  name: UIBuilder(VisualElement)
  nameWithType: UIBuilder.UIBuilder(VisualElement)
  fullName: IndustrialValley.Helpers.UIBuilder.UIBuilder(UnityEngine.UIElements.VisualElement)
  type: Constructor
  source:
    id: .ctor
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Helpers\UIBuilder.cs
    startLine: 8
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Helpers
  syntax:
    content: public UIBuilder(VisualElement elem)
    parameters:
    - id: elem
      type: UnityEngine.UIElements.VisualElement
    content.vb: Public Sub New(elem As VisualElement)
  overload: IndustrialValley.Helpers.UIBuilder.#ctor*
  nameWithType.vb: UIBuilder.New(VisualElement)
  fullName.vb: IndustrialValley.Helpers.UIBuilder.New(UnityEngine.UIElements.VisualElement)
  name.vb: New(VisualElement)
- uid: IndustrialValley.Helpers.UIBuilder.Elem
  commentId: P:IndustrialValley.Helpers.UIBuilder.Elem
  id: Elem
  parent: IndustrialValley.Helpers.UIBuilder
  langs:
  - csharp
  - vb
  name: Elem
  nameWithType: UIBuilder.Elem
  fullName: IndustrialValley.Helpers.UIBuilder.Elem
  type: Property
  source:
    id: Elem
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Helpers\UIBuilder.cs
    startLine: 13
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Helpers
  syntax:
    content: public VisualElement Elem { get; }
    parameters: []
    return:
      type: UnityEngine.UIElements.VisualElement
    content.vb: Public ReadOnly Property Elem As VisualElement
  overload: IndustrialValley.Helpers.UIBuilder.Elem*
- uid: IndustrialValley.Helpers.UIBuilder.Create
  commentId: M:IndustrialValley.Helpers.UIBuilder.Create
  id: Create
  parent: IndustrialValley.Helpers.UIBuilder
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: UIBuilder.Create()
  fullName: IndustrialValley.Helpers.UIBuilder.Create()
  type: Method
  source:
    id: Create
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Helpers\UIBuilder.cs
    startLine: 19
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Helpers
  summary: Create a new UIBuilder instance with an empty VisualElement.
  example: []
  syntax:
    content: public static UIBuilder Create()
    return:
      type: IndustrialValley.Helpers.UIBuilder
      description: ''
    content.vb: Public Shared Function Create() As UIBuilder
  overload: IndustrialValley.Helpers.UIBuilder.Create*
- uid: IndustrialValley.Helpers.UIBuilder.Create(System.String)
  commentId: M:IndustrialValley.Helpers.UIBuilder.Create(System.String)
  id: Create(System.String)
  parent: IndustrialValley.Helpers.UIBuilder
  langs:
  - csharp
  - vb
  name: Create(string)
  nameWithType: UIBuilder.Create(string)
  fullName: IndustrialValley.Helpers.UIBuilder.Create(string)
  type: Method
  source:
    id: Create
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Helpers\UIBuilder.cs
    startLine: 29
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Helpers
  summary: Create a new UIBuilder instance with a VisualElement that has the specified class name.
  example: []
  syntax:
    content: public static UIBuilder Create(string className)
    parameters:
    - id: className
      type: System.String
      description: ''
    return:
      type: IndustrialValley.Helpers.UIBuilder
      description: ''
    content.vb: Public Shared Function Create(className As String) As UIBuilder
  overload: IndustrialValley.Helpers.UIBuilder.Create*
  nameWithType.vb: UIBuilder.Create(String)
  fullName.vb: IndustrialValley.Helpers.UIBuilder.Create(String)
  name.vb: Create(String)
- uid: IndustrialValley.Helpers.UIBuilder.AddElement``1(``0,System.String)
  commentId: M:IndustrialValley.Helpers.UIBuilder.AddElement``1(``0,System.String)
  id: AddElement``1(``0,System.String)
  parent: IndustrialValley.Helpers.UIBuilder
  langs:
  - csharp
  - vb
  name: AddElement<T>(T, string)
  nameWithType: UIBuilder.AddElement<T>(T, string)
  fullName: IndustrialValley.Helpers.UIBuilder.AddElement<T>(T, string)
  type: Method
  source:
    id: AddElement
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Helpers\UIBuilder.cs
    startLine: 43
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Helpers
  summary: Add a new element to the current VisualElement.
  example: []
  syntax:
    content: 'public T AddElement<T>(T element, string className = null) where T : VisualElement'
    parameters:
    - id: element
      type: '{T}'
      description: ''
    - id: className
      type: System.String
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function AddElement(Of T As VisualElement)(element As T, className As String = Nothing) As T
  overload: IndustrialValley.Helpers.UIBuilder.AddElement*
  nameWithType.vb: UIBuilder.AddElement(Of T)(T, String)
  fullName.vb: IndustrialValley.Helpers.UIBuilder.AddElement(Of T)(T, String)
  name.vb: AddElement(Of T)(T, String)
- uid: IndustrialValley.Helpers.UIBuilder.AddLabel(System.String,System.String)
  commentId: M:IndustrialValley.Helpers.UIBuilder.AddLabel(System.String,System.String)
  id: AddLabel(System.String,System.String)
  parent: IndustrialValley.Helpers.UIBuilder
  langs:
  - csharp
  - vb
  name: AddLabel(string, string)
  nameWithType: UIBuilder.AddLabel(string, string)
  fullName: IndustrialValley.Helpers.UIBuilder.AddLabel(string, string)
  type: Method
  source:
    id: AddLabel
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Helpers\UIBuilder.cs
    startLine: 62
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Helpers
  summary: Add a new Label to the current VisualElement.
  example: []
  syntax:
    content: public Label AddLabel(string text, string className = null)
    parameters:
    - id: text
      type: System.String
      description: ''
    - id: className
      type: System.String
      description: ''
    return:
      type: UnityEngine.UIElements.Label
      description: ''
    content.vb: Public Function AddLabel(text As String, className As String = Nothing) As Label
  overload: IndustrialValley.Helpers.UIBuilder.AddLabel*
  nameWithType.vb: UIBuilder.AddLabel(String, String)
  fullName.vb: IndustrialValley.Helpers.UIBuilder.AddLabel(String, String)
  name.vb: AddLabel(String, String)
- uid: IndustrialValley.Helpers.UIBuilder.AddImage(UnityEngine.Texture2D,System.String)
  commentId: M:IndustrialValley.Helpers.UIBuilder.AddImage(UnityEngine.Texture2D,System.String)
  id: AddImage(UnityEngine.Texture2D,System.String)
  parent: IndustrialValley.Helpers.UIBuilder
  langs:
  - csharp
  - vb
  name: AddImage(Texture2D, string)
  nameWithType: UIBuilder.AddImage(Texture2D, string)
  fullName: IndustrialValley.Helpers.UIBuilder.AddImage(UnityEngine.Texture2D, string)
  type: Method
  source:
    id: AddImage
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Helpers\UIBuilder.cs
    startLine: 75
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Helpers
  summary: Adds a new Image to the current VisualElement.
  example: []
  syntax:
    content: public Image AddImage(Texture2D image, string className = null)
    parameters:
    - id: image
      type: UnityEngine.Texture2D
      description: ''
    - id: className
      type: System.String
      description: ''
    return:
      type: UnityEngine.UIElements.Image
      description: ''
    content.vb: Public Function AddImage(image As Texture2D, className As String = Nothing) As Image
  overload: IndustrialValley.Helpers.UIBuilder.AddImage*
  nameWithType.vb: UIBuilder.AddImage(Texture2D, String)
  fullName.vb: IndustrialValley.Helpers.UIBuilder.AddImage(UnityEngine.Texture2D, String)
  name.vb: AddImage(Texture2D, String)
- uid: IndustrialValley.Helpers.UIBuilder.AddImage(UnityEngine.Sprite,System.String)
  commentId: M:IndustrialValley.Helpers.UIBuilder.AddImage(UnityEngine.Sprite,System.String)
  id: AddImage(UnityEngine.Sprite,System.String)
  parent: IndustrialValley.Helpers.UIBuilder
  langs:
  - csharp
  - vb
  name: AddImage(Sprite, string)
  nameWithType: UIBuilder.AddImage(Sprite, string)
  fullName: IndustrialValley.Helpers.UIBuilder.AddImage(UnityEngine.Sprite, string)
  type: Method
  source:
    id: AddImage
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Helpers\UIBuilder.cs
    startLine: 87
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Helpers
  example: []
  syntax:
    content: public Image AddImage(Sprite image, string className = null)
    parameters:
    - id: image
      type: UnityEngine.Sprite
    - id: className
      type: System.String
    return:
      type: UnityEngine.UIElements.Image
    content.vb: Public Function AddImage(image As Sprite, className As String = Nothing) As Image
  overload: IndustrialValley.Helpers.UIBuilder.AddImage*
  nameWithType.vb: UIBuilder.AddImage(Sprite, String)
  fullName.vb: IndustrialValley.Helpers.UIBuilder.AddImage(UnityEngine.Sprite, String)
  name.vb: AddImage(Sprite, String)
- uid: IndustrialValley.Helpers.UIBuilder.StyleAll``1(System.Action{``0})
  commentId: M:IndustrialValley.Helpers.UIBuilder.StyleAll``1(System.Action{``0})
  id: StyleAll``1(System.Action{``0})
  parent: IndustrialValley.Helpers.UIBuilder
  langs:
  - csharp
  - vb
  name: StyleAll<T>(Action<T>)
  nameWithType: UIBuilder.StyleAll<T>(Action<T>)
  fullName: IndustrialValley.Helpers.UIBuilder.StyleAll<T>(System.Action<T>)
  type: Method
  source:
    id: StyleAll
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Helpers\UIBuilder.cs
    startLine: 104
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Helpers
  summary: Style all elements of type T within the current VisualElement.
  example: []
  syntax:
    content: 'public UIBuilder StyleAll<T>(Action<T> styleAction) where T : VisualElement'
    parameters:
    - id: styleAction
      type: System.Action{{T}}
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: IndustrialValley.Helpers.UIBuilder
      description: ''
    content.vb: Public Function StyleAll(Of T As VisualElement)(styleAction As Action(Of T)) As UIBuilder
  overload: IndustrialValley.Helpers.UIBuilder.StyleAll*
  nameWithType.vb: UIBuilder.StyleAll(Of T)(Action(Of T))
  fullName.vb: IndustrialValley.Helpers.UIBuilder.StyleAll(Of T)(System.Action(Of T))
  name.vb: StyleAll(Of T)(Action(Of T))
- uid: IndustrialValley.Helpers.UIBuilder.StyleAll(System.String,System.Action{UnityEngine.UIElements.VisualElement})
  commentId: M:IndustrialValley.Helpers.UIBuilder.StyleAll(System.String,System.Action{UnityEngine.UIElements.VisualElement})
  id: StyleAll(System.String,System.Action{UnityEngine.UIElements.VisualElement})
  parent: IndustrialValley.Helpers.UIBuilder
  langs:
  - csharp
  - vb
  name: StyleAll(string, Action<VisualElement>)
  nameWithType: UIBuilder.StyleAll(string, Action<VisualElement>)
  fullName: IndustrialValley.Helpers.UIBuilder.StyleAll(string, System.Action<UnityEngine.UIElements.VisualElement>)
  type: Method
  source:
    id: StyleAll
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Helpers\UIBuilder.cs
    startLine: 118
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Helpers
  summary: Style all elements with the specified class name within the current VisualElement.
  example: []
  syntax:
    content: public UIBuilder StyleAll(string className, Action<VisualElement> styleAction)
    parameters:
    - id: className
      type: System.String
      description: ''
    - id: styleAction
      type: System.Action{UnityEngine.UIElements.VisualElement}
      description: ''
    return:
      type: IndustrialValley.Helpers.UIBuilder
      description: ''
    content.vb: Public Function StyleAll(className As String, styleAction As Action(Of VisualElement)) As UIBuilder
  overload: IndustrialValley.Helpers.UIBuilder.StyleAll*
  nameWithType.vb: UIBuilder.StyleAll(String, Action(Of VisualElement))
  fullName.vb: IndustrialValley.Helpers.UIBuilder.StyleAll(String, System.Action(Of UnityEngine.UIElements.VisualElement))
  name.vb: StyleAll(String, Action(Of VisualElement))
- uid: IndustrialValley.Helpers.UIBuilder.AddUI(IndustrialValley.Helpers.UIBuilder)
  commentId: M:IndustrialValley.Helpers.UIBuilder.AddUI(IndustrialValley.Helpers.UIBuilder)
  id: AddUI(IndustrialValley.Helpers.UIBuilder)
  parent: IndustrialValley.Helpers.UIBuilder
  langs:
  - csharp
  - vb
  name: AddUI(UIBuilder)
  nameWithType: UIBuilder.AddUI(UIBuilder)
  fullName: IndustrialValley.Helpers.UIBuilder.AddUI(IndustrialValley.Helpers.UIBuilder)
  type: Method
  source:
    id: AddUI
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Helpers\UIBuilder.cs
    startLine: 131
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Helpers
  summary: Adds another UIBuilder's VisualElement to the current VisualElement.
  example: []
  syntax:
    content: public UIBuilder AddUI(UIBuilder uiBuilder)
    parameters:
    - id: uiBuilder
      type: IndustrialValley.Helpers.UIBuilder
      description: ''
    return:
      type: IndustrialValley.Helpers.UIBuilder
      description: ''
    content.vb: Public Function AddUI(uiBuilder As UIBuilder) As UIBuilder
  overload: IndustrialValley.Helpers.UIBuilder.AddUI*
references:
- uid: IndustrialValley.Helpers
  commentId: N:IndustrialValley.Helpers
  href: IndustrialValley.html
  name: IndustrialValley.Helpers
  nameWithType: IndustrialValley.Helpers
  fullName: IndustrialValley.Helpers
  spec.csharp:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Helpers
    name: Helpers
    href: IndustrialValley.Helpers.html
  spec.vb:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Helpers
    name: Helpers
    href: IndustrialValley.Helpers.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: IndustrialValley.Helpers.UIBuilder.#ctor*
  commentId: Overload:IndustrialValley.Helpers.UIBuilder.#ctor
  href: IndustrialValley.Helpers.UIBuilder.-ctor.html#IndustrialValley_Helpers_UIBuilder__ctor_UnityEngine_UIElements_VisualElement_
  name: UIBuilder
  nameWithType: UIBuilder.UIBuilder
  fullName: IndustrialValley.Helpers.UIBuilder.UIBuilder
  nameWithType.vb: UIBuilder.New
  fullName.vb: IndustrialValley.Helpers.UIBuilder.New
  name.vb: New
- uid: UnityEngine.UIElements.VisualElement
  commentId: T:UnityEngine.UIElements.VisualElement
  parent: UnityEngine.UIElements
  isExternal: true
  name: VisualElement
  nameWithType: VisualElement
  fullName: UnityEngine.UIElements.VisualElement
- uid: UnityEngine.UIElements
  commentId: N:UnityEngine.UIElements
  isExternal: true
  name: UnityEngine.UIElements
  nameWithType: UnityEngine.UIElements
  fullName: UnityEngine.UIElements
  spec.csharp:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.UIElements
    name: UIElements
    isExternal: true
  spec.vb:
  - uid: UnityEngine
    name: UnityEngine
    isExternal: true
  - name: .
  - uid: UnityEngine.UIElements
    name: UIElements
    isExternal: true
- uid: IndustrialValley.Helpers.UIBuilder.Elem*
  commentId: Overload:IndustrialValley.Helpers.UIBuilder.Elem
  href: IndustrialValley.Helpers.UIBuilder.Elem.html#IndustrialValley_Helpers_UIBuilder_Elem
  name: Elem
  nameWithType: UIBuilder.Elem
  fullName: IndustrialValley.Helpers.UIBuilder.Elem
- uid: IndustrialValley.Helpers.UIBuilder.Create*
  commentId: Overload:IndustrialValley.Helpers.UIBuilder.Create
  href: IndustrialValley.Helpers.UIBuilder.Create.html#IndustrialValley_Helpers_UIBuilder_Create
  name: Create
  nameWithType: UIBuilder.Create
  fullName: IndustrialValley.Helpers.UIBuilder.Create
- uid: IndustrialValley.Helpers.UIBuilder
  commentId: T:IndustrialValley.Helpers.UIBuilder
  parent: IndustrialValley.Helpers
  href: IndustrialValley.Helpers.UIBuilder.html
  name: UIBuilder
  nameWithType: UIBuilder
  fullName: IndustrialValley.Helpers.UIBuilder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: IndustrialValley.Helpers.UIBuilder.AddElement*
  commentId: Overload:IndustrialValley.Helpers.UIBuilder.AddElement
  href: IndustrialValley.Helpers.UIBuilder.AddElement.html#IndustrialValley_Helpers_UIBuilder_AddElement__1___0_System_String_
  name: AddElement
  nameWithType: UIBuilder.AddElement
  fullName: IndustrialValley.Helpers.UIBuilder.AddElement
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: IndustrialValley.Helpers.UIBuilder.AddLabel*
  commentId: Overload:IndustrialValley.Helpers.UIBuilder.AddLabel
  href: IndustrialValley.Helpers.UIBuilder.AddLabel.html#IndustrialValley_Helpers_UIBuilder_AddLabel_System_String_System_String_
  name: AddLabel
  nameWithType: UIBuilder.AddLabel
  fullName: IndustrialValley.Helpers.UIBuilder.AddLabel
- uid: UnityEngine.UIElements.Label
  commentId: T:UnityEngine.UIElements.Label
  parent: UnityEngine.UIElements
  isExternal: true
  name: Label
  nameWithType: Label
  fullName: UnityEngine.UIElements.Label
- uid: IndustrialValley.Helpers.UIBuilder.AddImage*
  commentId: Overload:IndustrialValley.Helpers.UIBuilder.AddImage
  href: IndustrialValley.Helpers.UIBuilder.AddImage.html#IndustrialValley_Helpers_UIBuilder_AddImage_UnityEngine_Texture2D_System_String_
  name: AddImage
  nameWithType: UIBuilder.AddImage
  fullName: IndustrialValley.Helpers.UIBuilder.AddImage
- uid: UnityEngine.Texture2D
  commentId: T:UnityEngine.Texture2D
  parent: UnityEngine
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: UnityEngine.UIElements.Image
  commentId: T:UnityEngine.UIElements.Image
  parent: UnityEngine.UIElements
  isExternal: true
  name: Image
  nameWithType: Image
  fullName: UnityEngine.UIElements.Image
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: UnityEngine.Sprite
  commentId: T:UnityEngine.Sprite
  parent: UnityEngine
  isExternal: true
  name: Sprite
  nameWithType: Sprite
  fullName: UnityEngine.Sprite
- uid: IndustrialValley.Helpers.UIBuilder.StyleAll*
  commentId: Overload:IndustrialValley.Helpers.UIBuilder.StyleAll
  href: IndustrialValley.Helpers.UIBuilder.StyleAll.html#IndustrialValley_Helpers_UIBuilder_StyleAll__1_System_Action___0__
  name: StyleAll
  nameWithType: UIBuilder.StyleAll
  fullName: IndustrialValley.Helpers.UIBuilder.StyleAll
- uid: System.Action{{T}}
  commentId: T:System.Action{`0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action{UnityEngine.UIElements.VisualElement}
  commentId: T:System.Action{UnityEngine.UIElements.VisualElement}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<VisualElement>
  nameWithType: Action<VisualElement>
  fullName: System.Action<UnityEngine.UIElements.VisualElement>
  nameWithType.vb: Action(Of VisualElement)
  fullName.vb: System.Action(Of UnityEngine.UIElements.VisualElement)
  name.vb: Action(Of VisualElement)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - uid: UnityEngine.UIElements.VisualElement
    name: VisualElement
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.UIElements.VisualElement
    name: VisualElement
    isExternal: true
  - name: )
- uid: IndustrialValley.Helpers.UIBuilder.AddUI*
  commentId: Overload:IndustrialValley.Helpers.UIBuilder.AddUI
  href: IndustrialValley.Helpers.UIBuilder.AddUI.html#IndustrialValley_Helpers_UIBuilder_AddUI_IndustrialValley_Helpers_UIBuilder_
  name: AddUI
  nameWithType: UIBuilder.AddUI
  fullName: IndustrialValley.Helpers.UIBuilder.AddUI
memberLayout: SeparatePages
