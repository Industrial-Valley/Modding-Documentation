### YamlMime:ManagedReference
items:
- uid: IndustrialValley.Saving.Database
  commentId: T:IndustrialValley.Saving.Database
  id: Database
  parent: IndustrialValley.Saving
  children:
  - IndustrialValley.Saving.Database.AddMigration(IndustrialValley.Helpers.Sqlite.Migration)
  - IndustrialValley.Saving.Database.AddTable(IndustrialValley.Helpers.Sqlite.TableBuilder)
  - IndustrialValley.Saving.Database.AddTable``1
  - IndustrialValley.Saving.Database.AddTable``1(System.Func{IndustrialValley.Helpers.Sqlite.TableBuilder,IndustrialValley.Helpers.Sqlite.TableBuilder})
  - IndustrialValley.Saving.Database.AlterTable(IndustrialValley.Helpers.Sqlite.AlterTableBuilder)
  - IndustrialValley.Saving.Database.Delete(IndustrialValley.Helpers.Sqlite.DeleteBuilder)
  - IndustrialValley.Saving.Database.DeleteById``1(System.Int64)
  - IndustrialValley.Saving.Database.Delete``1(IndustrialValley.Helpers.Sqlite.WhereBuilder)
  - IndustrialValley.Saving.Database.Insert(IndustrialValley.Helpers.Sqlite.InsertBuilder)
  - IndustrialValley.Saving.Database.Insert``1(``0)
  - IndustrialValley.Saving.Database.RawSql(System.String)
  - IndustrialValley.Saving.Database.RawSqlWithResult``1(System.String)
  - IndustrialValley.Saving.Database.Replace(IndustrialValley.Helpers.Sqlite.InsertBuilder)
  - IndustrialValley.Saving.Database.Replace``1(``0)
  - IndustrialValley.Saving.Database.SelectAll``1(IndustrialValley.Helpers.Sqlite.SelectBuilder)
  - IndustrialValley.Saving.Database.SelectAll``1(IndustrialValley.Helpers.Sqlite.WhereBuilder,System.Collections.Generic.List{System.String})
  - IndustrialValley.Saving.Database.Select``1(IndustrialValley.Helpers.Sqlite.SelectBuilder)
  - IndustrialValley.Saving.Database.Select``1(System.String,IndustrialValley.Helpers.Sqlite.WhereBuilder,System.Collections.Generic.List{System.String})
  - IndustrialValley.Saving.Database.Update(IndustrialValley.Helpers.Sqlite.UpdateBuilder)
  - IndustrialValley.Saving.Database.UpdateById``1(System.Int64,``0)
  - IndustrialValley.Saving.Database.Update``1(``0,IndustrialValley.Helpers.Sqlite.WhereBuilder)
  langs:
  - csharp
  - vb
  name: Database
  nameWithType: Database
  fullName: IndustrialValley.Saving.Database
  type: Class
  source:
    id: Database
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Delete.cs
    startLine: 5
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  syntax:
    content: public static class Database
    content.vb: Public Module Database
  inheritance:
  - System.Object
- uid: IndustrialValley.Saving.Database.Insert(IndustrialValley.Helpers.Sqlite.InsertBuilder)
  commentId: M:IndustrialValley.Saving.Database.Insert(IndustrialValley.Helpers.Sqlite.InsertBuilder)
  id: Insert(IndustrialValley.Helpers.Sqlite.InsertBuilder)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: Insert(InsertBuilder)
  nameWithType: Database.Insert(InsertBuilder)
  fullName: IndustrialValley.Saving.Database.Insert(IndustrialValley.Helpers.Sqlite.InsertBuilder)
  type: Method
  source:
    id: Insert
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Insert.cs
    startLine: 13
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Inserts a new record into the database using the provided InsertBuilder.
  example: []
  syntax:
    content: public static long Insert(InsertBuilder builder)
    parameters:
    - id: builder
      type: IndustrialValley.Helpers.Sqlite.InsertBuilder
      description: ''
    return:
      type: System.Int64
    content.vb: Public Shared Function Insert(builder As InsertBuilder) As Long
  overload: IndustrialValley.Saving.Database.Insert*
- uid: IndustrialValley.Saving.Database.Insert``1(``0)
  commentId: M:IndustrialValley.Saving.Database.Insert``1(``0)
  id: Insert``1(``0)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: Insert<T>(T)
  nameWithType: Database.Insert<T>(T)
  fullName: IndustrialValley.Saving.Database.Insert<T>(T)
  type: Method
  source:
    id: Insert
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Insert.cs
    startLine: 25
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Inserts a new record into the database for the specified item.
  example: []
  syntax:
    content: public static long Insert<T>(T item)
    parameters:
    - id: item
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Int64
      description: ''
    content.vb: Public Shared Function Insert(Of T)(item As T) As Long
  overload: IndustrialValley.Saving.Database.Insert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ''
  nameWithType.vb: Database.Insert(Of T)(T)
  fullName.vb: IndustrialValley.Saving.Database.Insert(Of T)(T)
  name.vb: Insert(Of T)(T)
- uid: IndustrialValley.Saving.Database.Replace(IndustrialValley.Helpers.Sqlite.InsertBuilder)
  commentId: M:IndustrialValley.Saving.Database.Replace(IndustrialValley.Helpers.Sqlite.InsertBuilder)
  id: Replace(IndustrialValley.Helpers.Sqlite.InsertBuilder)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: Replace(InsertBuilder)
  nameWithType: Database.Replace(InsertBuilder)
  fullName: IndustrialValley.Saving.Database.Replace(IndustrialValley.Helpers.Sqlite.InsertBuilder)
  type: Method
  source:
    id: Replace
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Insert.cs
    startLine: 57
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Inserts a new record into the database, replacing any existing record with the same primary key.
  example: []
  syntax:
    content: public static long Replace(InsertBuilder builder)
    parameters:
    - id: builder
      type: IndustrialValley.Helpers.Sqlite.InsertBuilder
      description: ''
    return:
      type: System.Int64
      description: ''
    content.vb: Public Shared Function Replace(builder As InsertBuilder) As Long
  overload: IndustrialValley.Saving.Database.Replace*
- uid: IndustrialValley.Saving.Database.Replace``1(``0)
  commentId: M:IndustrialValley.Saving.Database.Replace``1(``0)
  id: Replace``1(``0)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: Replace<T>(T)
  nameWithType: Database.Replace<T>(T)
  fullName: IndustrialValley.Saving.Database.Replace<T>(T)
  type: Method
  source:
    id: Replace
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Insert.cs
    startLine: 69
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Inserts a new record into the database, replacing any existing record with the same primary key.
  example: []
  syntax:
    content: public static long Replace<T>(T item)
    parameters:
    - id: item
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: System.Int64
      description: ''
    content.vb: Public Shared Function Replace(Of T)(item As T) As Long
  overload: IndustrialValley.Saving.Database.Replace*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ''
  nameWithType.vb: Database.Replace(Of T)(T)
  fullName.vb: IndustrialValley.Saving.Database.Replace(Of T)(T)
  name.vb: Replace(Of T)(T)
- uid: IndustrialValley.Saving.Database.Update(IndustrialValley.Helpers.Sqlite.UpdateBuilder)
  commentId: M:IndustrialValley.Saving.Database.Update(IndustrialValley.Helpers.Sqlite.UpdateBuilder)
  id: Update(IndustrialValley.Helpers.Sqlite.UpdateBuilder)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: Update(UpdateBuilder)
  nameWithType: Database.Update(UpdateBuilder)
  fullName: IndustrialValley.Saving.Database.Update(IndustrialValley.Helpers.Sqlite.UpdateBuilder)
  type: Method
  source:
    id: Update
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Update.cs
    startLine: 13
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Updates an existing record in the database using the provided InsertBuilder.
  example: []
  syntax:
    content: public static void Update(UpdateBuilder builder)
    parameters:
    - id: builder
      type: IndustrialValley.Helpers.Sqlite.UpdateBuilder
      description: ''
    content.vb: Public Shared Sub Update(builder As UpdateBuilder)
  overload: IndustrialValley.Saving.Database.Update*
- uid: IndustrialValley.Saving.Database.Update``1(``0,IndustrialValley.Helpers.Sqlite.WhereBuilder)
  commentId: M:IndustrialValley.Saving.Database.Update``1(``0,IndustrialValley.Helpers.Sqlite.WhereBuilder)
  id: Update``1(``0,IndustrialValley.Helpers.Sqlite.WhereBuilder)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: Update<T>(T, WhereBuilder)
  nameWithType: Database.Update<T>(T, WhereBuilder)
  fullName: IndustrialValley.Saving.Database.Update<T>(T, IndustrialValley.Helpers.Sqlite.WhereBuilder)
  type: Method
  source:
    id: Update
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Update.cs
    startLine: 25
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Updates an existing record in the database for the specified item.
  example: []
  syntax:
    content: public static void Update<T>(T item, WhereBuilder where)
    parameters:
    - id: item
      type: '{T}'
      description: ''
    - id: where
      type: IndustrialValley.Helpers.Sqlite.WhereBuilder
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Shared Sub Update(Of T)(item As T, where As WhereBuilder)
  overload: IndustrialValley.Saving.Database.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ''
  nameWithType.vb: Database.Update(Of T)(T, WhereBuilder)
  fullName.vb: IndustrialValley.Saving.Database.Update(Of T)(T, IndustrialValley.Helpers.Sqlite.WhereBuilder)
  name.vb: Update(Of T)(T, WhereBuilder)
- uid: IndustrialValley.Saving.Database.UpdateById``1(System.Int64,``0)
  commentId: M:IndustrialValley.Saving.Database.UpdateById``1(System.Int64,``0)
  id: UpdateById``1(System.Int64,``0)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: UpdateById<T>(long, T)
  nameWithType: Database.UpdateById<T>(long, T)
  fullName: IndustrialValley.Saving.Database.UpdateById<T>(long, T)
  type: Method
  source:
    id: UpdateById
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Update.cs
    startLine: 60
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Updates an existing record in the database by its id column.
  example: []
  syntax:
    content: public static void UpdateById<T>(long id, T item)
    parameters:
    - id: id
      type: System.Int64
      description: ''
    - id: item
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Shared Sub UpdateById(Of T)(id As Long, item As T)
  overload: IndustrialValley.Saving.Database.UpdateById*
  nameWithType.vb: Database.UpdateById(Of T)(Long, T)
  fullName.vb: IndustrialValley.Saving.Database.UpdateById(Of T)(Long, T)
  name.vb: UpdateById(Of T)(Long, T)
- uid: IndustrialValley.Saving.Database.AddTable(IndustrialValley.Helpers.Sqlite.TableBuilder)
  commentId: M:IndustrialValley.Saving.Database.AddTable(IndustrialValley.Helpers.Sqlite.TableBuilder)
  id: AddTable(IndustrialValley.Helpers.Sqlite.TableBuilder)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: AddTable(TableBuilder)
  nameWithType: Database.AddTable(TableBuilder)
  fullName: IndustrialValley.Saving.Database.AddTable(IndustrialValley.Helpers.Sqlite.TableBuilder)
  type: Method
  source:
    id: AddTable
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Table.cs
    startLine: 13
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Adds a new table to the database using the provided TableBuilder.
  example: []
  syntax:
    content: public static void AddTable(TableBuilder builder)
    parameters:
    - id: builder
      type: IndustrialValley.Helpers.Sqlite.TableBuilder
      description: ''
    content.vb: Public Shared Sub AddTable(builder As TableBuilder)
  overload: IndustrialValley.Saving.Database.AddTable*
- uid: IndustrialValley.Saving.Database.AddTable``1(System.Func{IndustrialValley.Helpers.Sqlite.TableBuilder,IndustrialValley.Helpers.Sqlite.TableBuilder})
  commentId: M:IndustrialValley.Saving.Database.AddTable``1(System.Func{IndustrialValley.Helpers.Sqlite.TableBuilder,IndustrialValley.Helpers.Sqlite.TableBuilder})
  id: AddTable``1(System.Func{IndustrialValley.Helpers.Sqlite.TableBuilder,IndustrialValley.Helpers.Sqlite.TableBuilder})
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: AddTable<T>(Func<TableBuilder, TableBuilder>)
  nameWithType: Database.AddTable<T>(Func<TableBuilder, TableBuilder>)
  fullName: IndustrialValley.Saving.Database.AddTable<T>(System.Func<IndustrialValley.Helpers.Sqlite.TableBuilder, IndustrialValley.Helpers.Sqlite.TableBuilder>)
  type: Method
  source:
    id: AddTable
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Table.cs
    startLine: 24
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Adds a new table to the database based on the provided type T, can be used to customize the table
  example: []
  syntax:
    content: 'public static void AddTable<T>(Func<TableBuilder, TableBuilder> builderFunc) where T : new()'
    parameters:
    - id: builderFunc
      type: System.Func{IndustrialValley.Helpers.Sqlite.TableBuilder,IndustrialValley.Helpers.Sqlite.TableBuilder}
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Shared Sub AddTable(Of T As New)(builderFunc As Func(Of TableBuilder, TableBuilder))
  overload: IndustrialValley.Saving.Database.AddTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ''
  nameWithType.vb: Database.AddTable(Of T)(Func(Of TableBuilder, TableBuilder))
  fullName.vb: IndustrialValley.Saving.Database.AddTable(Of T)(System.Func(Of IndustrialValley.Helpers.Sqlite.TableBuilder, IndustrialValley.Helpers.Sqlite.TableBuilder))
  name.vb: AddTable(Of T)(Func(Of TableBuilder, TableBuilder))
- uid: IndustrialValley.Saving.Database.AddTable``1
  commentId: M:IndustrialValley.Saving.Database.AddTable``1
  id: AddTable``1
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: AddTable<T>()
  nameWithType: Database.AddTable<T>()
  fullName: IndustrialValley.Saving.Database.AddTable<T>()
  type: Method
  source:
    id: AddTable
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Table.cs
    startLine: 45
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Adds a new table to the database based on the provided type T.
  example: []
  syntax:
    content: 'public static void AddTable<T>() where T : new()'
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Shared Sub AddTable(Of T As New)()
  overload: IndustrialValley.Saving.Database.AddTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ''
  nameWithType.vb: Database.AddTable(Of T)()
  fullName.vb: IndustrialValley.Saving.Database.AddTable(Of T)()
  name.vb: AddTable(Of T)()
- uid: IndustrialValley.Saving.Database.AlterTable(IndustrialValley.Helpers.Sqlite.AlterTableBuilder)
  commentId: M:IndustrialValley.Saving.Database.AlterTable(IndustrialValley.Helpers.Sqlite.AlterTableBuilder)
  id: AlterTable(IndustrialValley.Helpers.Sqlite.AlterTableBuilder)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: AlterTable(AlterTableBuilder)
  nameWithType: Database.AlterTable(AlterTableBuilder)
  fullName: IndustrialValley.Saving.Database.AlterTable(IndustrialValley.Helpers.Sqlite.AlterTableBuilder)
  type: Method
  source:
    id: AlterTable
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Table.cs
    startLine: 59
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  syntax:
    content: public static void AlterTable(AlterTableBuilder builder)
    parameters:
    - id: builder
      type: IndustrialValley.Helpers.Sqlite.AlterTableBuilder
    content.vb: Public Shared Sub AlterTable(builder As AlterTableBuilder)
  overload: IndustrialValley.Saving.Database.AlterTable*
- uid: IndustrialValley.Saving.Database.SelectAll``1(IndustrialValley.Helpers.Sqlite.SelectBuilder)
  commentId: M:IndustrialValley.Saving.Database.SelectAll``1(IndustrialValley.Helpers.Sqlite.SelectBuilder)
  id: SelectAll``1(IndustrialValley.Helpers.Sqlite.SelectBuilder)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: SelectAll<T>(SelectBuilder)
  nameWithType: Database.SelectAll<T>(SelectBuilder)
  fullName: IndustrialValley.Saving.Database.SelectAll<T>(IndustrialValley.Helpers.Sqlite.SelectBuilder)
  type: Method
  source:
    id: SelectAll
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Select.cs
    startLine: 15
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Selects all records from the specified table and returns them as a list of type T.
  example: []
  syntax:
    content: 'public static SqlResult<T> SelectAll<T>(SelectBuilder builder) where T : new()'
    parameters:
    - id: builder
      type: IndustrialValley.Helpers.Sqlite.SelectBuilder
      description: The SelectBuilder to use for building the SQL query.
    typeParameters:
    - id: T
      description: ''
    return:
      type: IndustrialValley.Saving.SqlResult{{T}}
      description: ''
    content.vb: Public Shared Function SelectAll(Of T As New)(builder As SelectBuilder) As SqlResult(Of T)
  overload: IndustrialValley.Saving.Database.SelectAll*
  nameWithType.vb: Database.SelectAll(Of T)(SelectBuilder)
  fullName.vb: IndustrialValley.Saving.Database.SelectAll(Of T)(IndustrialValley.Helpers.Sqlite.SelectBuilder)
  name.vb: SelectAll(Of T)(SelectBuilder)
- uid: IndustrialValley.Saving.Database.SelectAll``1(IndustrialValley.Helpers.Sqlite.WhereBuilder,System.Collections.Generic.List{System.String})
  commentId: M:IndustrialValley.Saving.Database.SelectAll``1(IndustrialValley.Helpers.Sqlite.WhereBuilder,System.Collections.Generic.List{System.String})
  id: SelectAll``1(IndustrialValley.Helpers.Sqlite.WhereBuilder,System.Collections.Generic.List{System.String})
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: SelectAll<T>(WhereBuilder, List<string>)
  nameWithType: Database.SelectAll<T>(WhereBuilder, List<string>)
  fullName: IndustrialValley.Saving.Database.SelectAll<T>(IndustrialValley.Helpers.Sqlite.WhereBuilder, System.Collections.Generic.List<string>)
  type: Method
  source:
    id: SelectAll
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Select.cs
    startLine: 32
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Selects all records from the specified table and returns them as a list of type T.
  example: []
  syntax:
    content: 'public static SqlResult<T> SelectAll<T>(WhereBuilder where = null, List<string> columns = null) where T : new()'
    parameters:
    - id: where
      type: IndustrialValley.Helpers.Sqlite.WhereBuilder
      description: Optional where clause to filter results.
      attributes:
      - type: JetBrains.Annotations.CanBeNullAttribute
        ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
        arguments: []
    - id: columns
      type: System.Collections.Generic.List{System.String}
      description: Optional list of columns to select. If null or empty, all columns will be selected.
    typeParameters:
    - id: T
      description: ''
    return:
      type: IndustrialValley.Saving.SqlResult{{T}}
      description: ''
    content.vb: Public Shared Function SelectAll(Of T As New)(where As WhereBuilder = Nothing, columns As List(Of String) = Nothing) As SqlResult(Of T)
  overload: IndustrialValley.Saving.Database.SelectAll*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: ''
  nameWithType.vb: Database.SelectAll(Of T)(WhereBuilder, List(Of String))
  fullName.vb: IndustrialValley.Saving.Database.SelectAll(Of T)(IndustrialValley.Helpers.Sqlite.WhereBuilder, System.Collections.Generic.List(Of String))
  name.vb: SelectAll(Of T)(WhereBuilder, List(Of String))
- uid: IndustrialValley.Saving.Database.Select``1(IndustrialValley.Helpers.Sqlite.SelectBuilder)
  commentId: M:IndustrialValley.Saving.Database.Select``1(IndustrialValley.Helpers.Sqlite.SelectBuilder)
  id: Select``1(IndustrialValley.Helpers.Sqlite.SelectBuilder)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: Select<T>(SelectBuilder)
  nameWithType: Database.Select<T>(SelectBuilder)
  fullName: IndustrialValley.Saving.Database.Select<T>(IndustrialValley.Helpers.Sqlite.SelectBuilder)
  type: Method
  source:
    id: Select
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Select.cs
    startLine: 57
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Selects a single record from the specified table and returns it as an instance of type T.
  example: []
  syntax:
    content: 'public static T Select<T>(SelectBuilder builder) where T : new()'
    parameters:
    - id: builder
      type: IndustrialValley.Helpers.Sqlite.SelectBuilder
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Shared Function [Select](Of T As New)(builder As SelectBuilder) As T
  overload: IndustrialValley.Saving.Database.Select*
  nameWithType.vb: Database.Select(Of T)(SelectBuilder)
  fullName.vb: IndustrialValley.Saving.Database.Select(Of T)(IndustrialValley.Helpers.Sqlite.SelectBuilder)
  name.vb: Select(Of T)(SelectBuilder)
- uid: IndustrialValley.Saving.Database.Select``1(System.String,IndustrialValley.Helpers.Sqlite.WhereBuilder,System.Collections.Generic.List{System.String})
  commentId: M:IndustrialValley.Saving.Database.Select``1(System.String,IndustrialValley.Helpers.Sqlite.WhereBuilder,System.Collections.Generic.List{System.String})
  id: Select``1(System.String,IndustrialValley.Helpers.Sqlite.WhereBuilder,System.Collections.Generic.List{System.String})
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: Select<T>(string, WhereBuilder, List<string>)
  nameWithType: Database.Select<T>(string, WhereBuilder, List<string>)
  fullName: IndustrialValley.Saving.Database.Select<T>(string, IndustrialValley.Helpers.Sqlite.WhereBuilder, System.Collections.Generic.List<string>)
  type: Method
  source:
    id: Select
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Select.cs
    startLine: 81
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Selects a single record from the specified table and returns it as an instance of type T.
  example: []
  syntax:
    content: 'public static T Select<T>(string tableName = "", WhereBuilder where = null, List<string> columns = null) where T : new()'
    parameters:
    - id: tableName
      type: System.String
      description: >-
        The table name to select from. If not specified, it will use the table name defined in the

        TableAttribute of type T.
    - id: where
      type: IndustrialValley.Helpers.Sqlite.WhereBuilder
      description: Optional where clause to filter results.
      attributes:
      - type: JetBrains.Annotations.CanBeNullAttribute
        ctor: JetBrains.Annotations.CanBeNullAttribute.#ctor
        arguments: []
    - id: columns
      type: System.Collections.Generic.List{System.String}
      description: Optional list of columns to select. If null or empty, all columns will be selected.
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Shared Function [Select](Of T As New)(tableName As String = "", where As WhereBuilder = Nothing, columns As List(Of String) = Nothing) As T
  overload: IndustrialValley.Saving.Database.Select*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: ''
  nameWithType.vb: Database.Select(Of T)(String, WhereBuilder, List(Of String))
  fullName.vb: IndustrialValley.Saving.Database.Select(Of T)(String, IndustrialValley.Helpers.Sqlite.WhereBuilder, System.Collections.Generic.List(Of String))
  name.vb: Select(Of T)(String, WhereBuilder, List(Of String))
- uid: IndustrialValley.Saving.Database.AddMigration(IndustrialValley.Helpers.Sqlite.Migration)
  commentId: M:IndustrialValley.Saving.Database.AddMigration(IndustrialValley.Helpers.Sqlite.Migration)
  id: AddMigration(IndustrialValley.Helpers.Sqlite.Migration)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: AddMigration(Migration)
  nameWithType: Database.AddMigration(Migration)
  fullName: IndustrialValley.Saving.Database.AddMigration(IndustrialValley.Helpers.Sqlite.Migration)
  type: Method
  source:
    id: AddMigration
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.cs
    startLine: 105
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Adds a migration to the database. The migration will only run once.
  example: []
  syntax:
    content: public static void AddMigration(Migration migration)
    parameters:
    - id: migration
      type: IndustrialValley.Helpers.Sqlite.Migration
      description: ''
    content.vb: Public Shared Sub AddMigration(migration As Migration)
  overload: IndustrialValley.Saving.Database.AddMigration*
- uid: IndustrialValley.Saving.Database.RawSql(System.String)
  commentId: M:IndustrialValley.Saving.Database.RawSql(System.String)
  id: RawSql(System.String)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: RawSql(string)
  nameWithType: Database.RawSql(string)
  fullName: IndustrialValley.Saving.Database.RawSql(string)
  type: Method
  source:
    id: RawSql
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.cs
    startLine: 118
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Executes a raw SQL command that does not return any results (e.g., INSERT, UPDATE, DELETE).
  example: []
  syntax:
    content: public static long RawSql(string sql)
    parameters:
    - id: sql
      type: System.String
      description: ''
    return:
      type: System.Int64
    content.vb: Public Shared Function RawSql(sql As String) As Long
  overload: IndustrialValley.Saving.Database.RawSql*
  nameWithType.vb: Database.RawSql(String)
  fullName.vb: IndustrialValley.Saving.Database.RawSql(String)
  name.vb: RawSql(String)
- uid: IndustrialValley.Saving.Database.RawSqlWithResult``1(System.String)
  commentId: M:IndustrialValley.Saving.Database.RawSqlWithResult``1(System.String)
  id: RawSqlWithResult``1(System.String)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: RawSqlWithResult<T>(string)
  nameWithType: Database.RawSqlWithResult<T>(string)
  fullName: IndustrialValley.Saving.Database.RawSqlWithResult<T>(string)
  type: Method
  source:
    id: RawSqlWithResult
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.cs
    startLine: 152
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Executes a raw SQL command that returns results.
  example: []
  syntax:
    content: 'public static SqlResult<T> RawSqlWithResult<T>(string sql) where T : new()'
    parameters:
    - id: sql
      type: System.String
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: IndustrialValley.Saving.SqlResult{{T}}
      description: ''
    content.vb: Public Shared Function RawSqlWithResult(Of T As New)(sql As String) As SqlResult(Of T)
  overload: IndustrialValley.Saving.Database.RawSqlWithResult*
  nameWithType.vb: Database.RawSqlWithResult(Of T)(String)
  fullName.vb: IndustrialValley.Saving.Database.RawSqlWithResult(Of T)(String)
  name.vb: RawSqlWithResult(Of T)(String)
- uid: IndustrialValley.Saving.Database.Delete(IndustrialValley.Helpers.Sqlite.DeleteBuilder)
  commentId: M:IndustrialValley.Saving.Database.Delete(IndustrialValley.Helpers.Sqlite.DeleteBuilder)
  id: Delete(IndustrialValley.Helpers.Sqlite.DeleteBuilder)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: Delete(DeleteBuilder)
  nameWithType: Database.Delete(DeleteBuilder)
  fullName: IndustrialValley.Saving.Database.Delete(IndustrialValley.Helpers.Sqlite.DeleteBuilder)
  type: Method
  source:
    id: Delete
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Delete.cs
    startLine: 11
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Deletes a record from the database using the provided DeleteBuilder.
  example: []
  syntax:
    content: public static void Delete(DeleteBuilder builder)
    parameters:
    - id: builder
      type: IndustrialValley.Helpers.Sqlite.DeleteBuilder
      description: ''
    content.vb: Public Shared Sub Delete(builder As DeleteBuilder)
  overload: IndustrialValley.Saving.Database.Delete*
- uid: IndustrialValley.Saving.Database.Delete``1(IndustrialValley.Helpers.Sqlite.WhereBuilder)
  commentId: M:IndustrialValley.Saving.Database.Delete``1(IndustrialValley.Helpers.Sqlite.WhereBuilder)
  id: Delete``1(IndustrialValley.Helpers.Sqlite.WhereBuilder)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: Delete<T>(WhereBuilder)
  nameWithType: Database.Delete<T>(WhereBuilder)
  fullName: IndustrialValley.Saving.Database.Delete<T>(IndustrialValley.Helpers.Sqlite.WhereBuilder)
  type: Method
  source:
    id: Delete
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Delete.cs
    startLine: 22
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Deletes a record from the database for the specified item.
  example: []
  syntax:
    content: public static void Delete<T>(WhereBuilder where)
    parameters:
    - id: where
      type: IndustrialValley.Helpers.Sqlite.WhereBuilder
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Shared Sub Delete(Of T)(where As WhereBuilder)
  overload: IndustrialValley.Saving.Database.Delete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: ''
  nameWithType.vb: Database.Delete(Of T)(WhereBuilder)
  fullName.vb: IndustrialValley.Saving.Database.Delete(Of T)(IndustrialValley.Helpers.Sqlite.WhereBuilder)
  name.vb: Delete(Of T)(WhereBuilder)
- uid: IndustrialValley.Saving.Database.DeleteById``1(System.Int64)
  commentId: M:IndustrialValley.Saving.Database.DeleteById``1(System.Int64)
  id: DeleteById``1(System.Int64)
  parent: IndustrialValley.Saving.Database
  langs:
  - csharp
  - vb
  name: DeleteById<T>(long)
  nameWithType: Database.DeleteById<T>(long)
  fullName: IndustrialValley.Saving.Database.DeleteById<T>(long)
  type: Method
  source:
    id: DeleteById
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Saving\Database.Delete.cs
    startLine: 41
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Saving
  summary: Deletes an existing record in the database by its id column.
  example: []
  syntax:
    content: public static void DeleteById<T>(long id)
    parameters:
    - id: id
      type: System.Int64
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Shared Sub DeleteById(Of T)(id As Long)
  overload: IndustrialValley.Saving.Database.DeleteById*
  nameWithType.vb: Database.DeleteById(Of T)(Long)
  fullName.vb: IndustrialValley.Saving.Database.DeleteById(Of T)(Long)
  name.vb: DeleteById(Of T)(Long)
references:
- uid: IndustrialValley.Saving
  commentId: N:IndustrialValley.Saving
  href: IndustrialValley.html
  name: IndustrialValley.Saving
  nameWithType: IndustrialValley.Saving
  fullName: IndustrialValley.Saving
  spec.csharp:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Saving
    name: Saving
    href: IndustrialValley.Saving.html
  spec.vb:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Saving
    name: Saving
    href: IndustrialValley.Saving.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: IndustrialValley.Saving.Database.Insert*
  commentId: Overload:IndustrialValley.Saving.Database.Insert
  href: IndustrialValley.Saving.Database.Insert.html#IndustrialValley_Saving_Database_Insert_IndustrialValley_Helpers_Sqlite_InsertBuilder_
  name: Insert
  nameWithType: Database.Insert
  fullName: IndustrialValley.Saving.Database.Insert
- uid: IndustrialValley.Helpers.Sqlite.InsertBuilder
  commentId: T:IndustrialValley.Helpers.Sqlite.InsertBuilder
  parent: IndustrialValley.Helpers.Sqlite
  href: IndustrialValley.Helpers.Sqlite.InsertBuilder.html
  name: InsertBuilder
  nameWithType: InsertBuilder
  fullName: IndustrialValley.Helpers.Sqlite.InsertBuilder
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: IndustrialValley.Helpers.Sqlite
  commentId: N:IndustrialValley.Helpers.Sqlite
  href: IndustrialValley.html
  name: IndustrialValley.Helpers.Sqlite
  nameWithType: IndustrialValley.Helpers.Sqlite
  fullName: IndustrialValley.Helpers.Sqlite
  spec.csharp:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Helpers
    name: Helpers
    href: IndustrialValley.Helpers.html
  - name: .
  - uid: IndustrialValley.Helpers.Sqlite
    name: Sqlite
    href: IndustrialValley.Helpers.Sqlite.html
  spec.vb:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Helpers
    name: Helpers
    href: IndustrialValley.Helpers.html
  - name: .
  - uid: IndustrialValley.Helpers.Sqlite
    name: Sqlite
    href: IndustrialValley.Helpers.Sqlite.html
- uid: System.InvalidOperationException
  commentId: T:System.InvalidOperationException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.invalidoperationexception
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: IndustrialValley.Saving.Database.Replace*
  commentId: Overload:IndustrialValley.Saving.Database.Replace
  href: IndustrialValley.Saving.Database.Replace.html#IndustrialValley_Saving_Database_Replace_IndustrialValley_Helpers_Sqlite_InsertBuilder_
  name: Replace
  nameWithType: Database.Replace
  fullName: IndustrialValley.Saving.Database.Replace
- uid: IndustrialValley.Saving.Database.Update*
  commentId: Overload:IndustrialValley.Saving.Database.Update
  href: IndustrialValley.Saving.Database.Update.html#IndustrialValley_Saving_Database_Update_IndustrialValley_Helpers_Sqlite_UpdateBuilder_
  name: Update
  nameWithType: Database.Update
  fullName: IndustrialValley.Saving.Database.Update
- uid: IndustrialValley.Helpers.Sqlite.UpdateBuilder
  commentId: T:IndustrialValley.Helpers.Sqlite.UpdateBuilder
  parent: IndustrialValley.Helpers.Sqlite
  href: IndustrialValley.Helpers.Sqlite.UpdateBuilder.html
  name: UpdateBuilder
  nameWithType: UpdateBuilder
  fullName: IndustrialValley.Helpers.Sqlite.UpdateBuilder
- uid: IndustrialValley.Helpers.Sqlite.WhereBuilder
  commentId: T:IndustrialValley.Helpers.Sqlite.WhereBuilder
  parent: IndustrialValley.Helpers.Sqlite
  href: IndustrialValley.Helpers.Sqlite.WhereBuilder.html
  name: WhereBuilder
  nameWithType: WhereBuilder
  fullName: IndustrialValley.Helpers.Sqlite.WhereBuilder
- uid: IndustrialValley.Saving.Database.UpdateById*
  commentId: Overload:IndustrialValley.Saving.Database.UpdateById
  href: IndustrialValley.Saving.Database.UpdateById.html#IndustrialValley_Saving_Database_UpdateById__1_System_Int64___0_
  name: UpdateById
  nameWithType: Database.UpdateById
  fullName: IndustrialValley.Saving.Database.UpdateById
- uid: IndustrialValley.Saving.Database.AddTable*
  commentId: Overload:IndustrialValley.Saving.Database.AddTable
  href: IndustrialValley.Saving.Database.AddTable.html#IndustrialValley_Saving_Database_AddTable_IndustrialValley_Helpers_Sqlite_TableBuilder_
  name: AddTable
  nameWithType: Database.AddTable
  fullName: IndustrialValley.Saving.Database.AddTable
- uid: IndustrialValley.Helpers.Sqlite.TableBuilder
  commentId: T:IndustrialValley.Helpers.Sqlite.TableBuilder
  parent: IndustrialValley.Helpers.Sqlite
  href: IndustrialValley.Helpers.Sqlite.TableBuilder.html
  name: TableBuilder
  nameWithType: TableBuilder
  fullName: IndustrialValley.Helpers.Sqlite.TableBuilder
- uid: System.Func{IndustrialValley.Helpers.Sqlite.TableBuilder,IndustrialValley.Helpers.Sqlite.TableBuilder}
  commentId: T:System.Func{IndustrialValley.Helpers.Sqlite.TableBuilder,IndustrialValley.Helpers.Sqlite.TableBuilder}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<TableBuilder, TableBuilder>
  nameWithType: Func<TableBuilder, TableBuilder>
  fullName: System.Func<IndustrialValley.Helpers.Sqlite.TableBuilder, IndustrialValley.Helpers.Sqlite.TableBuilder>
  nameWithType.vb: Func(Of TableBuilder, TableBuilder)
  fullName.vb: System.Func(Of IndustrialValley.Helpers.Sqlite.TableBuilder, IndustrialValley.Helpers.Sqlite.TableBuilder)
  name.vb: Func(Of TableBuilder, TableBuilder)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: IndustrialValley.Helpers.Sqlite.TableBuilder
    name: TableBuilder
    href: IndustrialValley.Helpers.Sqlite.TableBuilder.html
  - name: ','
  - name: " "
  - uid: IndustrialValley.Helpers.Sqlite.TableBuilder
    name: TableBuilder
    href: IndustrialValley.Helpers.Sqlite.TableBuilder.html
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: IndustrialValley.Helpers.Sqlite.TableBuilder
    name: TableBuilder
    href: IndustrialValley.Helpers.Sqlite.TableBuilder.html
  - name: ','
  - name: " "
  - uid: IndustrialValley.Helpers.Sqlite.TableBuilder
    name: TableBuilder
    href: IndustrialValley.Helpers.Sqlite.TableBuilder.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
- uid: IndustrialValley.Saving.Database.AlterTable*
  commentId: Overload:IndustrialValley.Saving.Database.AlterTable
  href: IndustrialValley.Saving.Database.AlterTable.html#IndustrialValley_Saving_Database_AlterTable_IndustrialValley_Helpers_Sqlite_AlterTableBuilder_
  name: AlterTable
  nameWithType: Database.AlterTable
  fullName: IndustrialValley.Saving.Database.AlterTable
- uid: IndustrialValley.Helpers.Sqlite.AlterTableBuilder
  commentId: T:IndustrialValley.Helpers.Sqlite.AlterTableBuilder
  parent: IndustrialValley.Helpers.Sqlite
  href: IndustrialValley.Helpers.Sqlite.AlterTableBuilder.html
  name: AlterTableBuilder
  nameWithType: AlterTableBuilder
  fullName: IndustrialValley.Helpers.Sqlite.AlterTableBuilder
- uid: IndustrialValley.Saving.Database.SelectAll*
  commentId: Overload:IndustrialValley.Saving.Database.SelectAll
  href: IndustrialValley.Saving.Database.SelectAll.html#IndustrialValley_Saving_Database_SelectAll__1_IndustrialValley_Helpers_Sqlite_SelectBuilder_
  name: SelectAll
  nameWithType: Database.SelectAll
  fullName: IndustrialValley.Saving.Database.SelectAll
- uid: IndustrialValley.Helpers.Sqlite.SelectBuilder
  commentId: T:IndustrialValley.Helpers.Sqlite.SelectBuilder
  parent: IndustrialValley.Helpers.Sqlite
  href: IndustrialValley.Helpers.Sqlite.SelectBuilder.html
  name: SelectBuilder
  nameWithType: SelectBuilder
  fullName: IndustrialValley.Helpers.Sqlite.SelectBuilder
- uid: IndustrialValley.Saving.SqlResult{{T}}
  commentId: T:IndustrialValley.Saving.SqlResult{``0}
  parent: IndustrialValley.Saving
  definition: IndustrialValley.Saving.SqlResult`1
  href: IndustrialValley.Saving.SqlResult-1.html
  name: SqlResult<T>
  nameWithType: SqlResult<T>
  fullName: IndustrialValley.Saving.SqlResult<T>
  nameWithType.vb: SqlResult(Of T)
  fullName.vb: IndustrialValley.Saving.SqlResult(Of T)
  name.vb: SqlResult(Of T)
  spec.csharp:
  - uid: IndustrialValley.Saving.SqlResult`1
    name: SqlResult
    href: IndustrialValley.Saving.SqlResult-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: IndustrialValley.Saving.SqlResult`1
    name: SqlResult
    href: IndustrialValley.Saving.SqlResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: IndustrialValley.Saving.SqlResult`1
  commentId: T:IndustrialValley.Saving.SqlResult`1
  href: IndustrialValley.Saving.SqlResult-1.html
  name: SqlResult<T>
  nameWithType: SqlResult<T>
  fullName: IndustrialValley.Saving.SqlResult<T>
  nameWithType.vb: SqlResult(Of T)
  fullName.vb: IndustrialValley.Saving.SqlResult(Of T)
  name.vb: SqlResult(Of T)
  spec.csharp:
  - uid: IndustrialValley.Saving.SqlResult`1
    name: SqlResult
    href: IndustrialValley.Saving.SqlResult-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: IndustrialValley.Saving.SqlResult`1
    name: SqlResult
    href: IndustrialValley.Saving.SqlResult-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: IndustrialValley.Saving.Database.Select*
  commentId: Overload:IndustrialValley.Saving.Database.Select
  href: IndustrialValley.Saving.Database.Select.html#IndustrialValley_Saving_Database_Select__1_IndustrialValley_Helpers_Sqlite_SelectBuilder_
  name: Select
  nameWithType: Database.Select
  fullName: IndustrialValley.Saving.Database.Select
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: IndustrialValley.Saving.Database.AddMigration*
  commentId: Overload:IndustrialValley.Saving.Database.AddMigration
  href: IndustrialValley.Saving.Database.AddMigration.html#IndustrialValley_Saving_Database_AddMigration_IndustrialValley_Helpers_Sqlite_Migration_
  name: AddMigration
  nameWithType: Database.AddMigration
  fullName: IndustrialValley.Saving.Database.AddMigration
- uid: IndustrialValley.Helpers.Sqlite.Migration
  commentId: T:IndustrialValley.Helpers.Sqlite.Migration
  parent: IndustrialValley.Helpers.Sqlite
  href: IndustrialValley.Helpers.Sqlite.Migration.html
  name: Migration
  nameWithType: Migration
  fullName: IndustrialValley.Helpers.Sqlite.Migration
- uid: IndustrialValley.Saving.Database.RawSql*
  commentId: Overload:IndustrialValley.Saving.Database.RawSql
  href: IndustrialValley.Saving.Database.RawSql.html#IndustrialValley_Saving_Database_RawSql_System_String_
  name: RawSql
  nameWithType: Database.RawSql
  fullName: IndustrialValley.Saving.Database.RawSql
- uid: IndustrialValley.Saving.Database.RawSqlWithResult*
  commentId: Overload:IndustrialValley.Saving.Database.RawSqlWithResult
  href: IndustrialValley.Saving.Database.RawSqlWithResult.html#IndustrialValley_Saving_Database_RawSqlWithResult__1_System_String_
  name: RawSqlWithResult
  nameWithType: Database.RawSqlWithResult
  fullName: IndustrialValley.Saving.Database.RawSqlWithResult
- uid: IndustrialValley.Saving.Database.Delete*
  commentId: Overload:IndustrialValley.Saving.Database.Delete
  href: IndustrialValley.Saving.Database.Delete.html#IndustrialValley_Saving_Database_Delete_IndustrialValley_Helpers_Sqlite_DeleteBuilder_
  name: Delete
  nameWithType: Database.Delete
  fullName: IndustrialValley.Saving.Database.Delete
- uid: IndustrialValley.Helpers.Sqlite.DeleteBuilder
  commentId: T:IndustrialValley.Helpers.Sqlite.DeleteBuilder
  parent: IndustrialValley.Helpers.Sqlite
  href: IndustrialValley.Helpers.Sqlite.DeleteBuilder.html
  name: DeleteBuilder
  nameWithType: DeleteBuilder
  fullName: IndustrialValley.Helpers.Sqlite.DeleteBuilder
- uid: IndustrialValley.Saving.Database.DeleteById*
  commentId: Overload:IndustrialValley.Saving.Database.DeleteById
  href: IndustrialValley.Saving.Database.DeleteById.html#IndustrialValley_Saving_Database_DeleteById__1_System_Int64_
  name: DeleteById
  nameWithType: Database.DeleteById
  fullName: IndustrialValley.Saving.Database.DeleteById
memberLayout: SeparatePages
