### YamlMime:ManagedReference
items:
- uid: IndustrialValley.Factory.FactoryGenerator
  commentId: T:IndustrialValley.Factory.FactoryGenerator
  id: FactoryGenerator
  parent: IndustrialValley.Factory
  children:
  - IndustrialValley.Factory.FactoryGenerator.GenerateTiles(UnityEngine.GameObject)
  - IndustrialValley.Factory.FactoryGenerator.GetBounds(UnityEngine.GameObject)
  - IndustrialValley.Factory.FactoryGenerator.GetTileAt(UnityEngine.Vector3)
  - IndustrialValley.Factory.FactoryGenerator.SpawnPlot(UnityEngine.Vector3)
  - IndustrialValley.Factory.FactoryGenerator.SpawnPlotAdjacent(UnityEngine.GameObject,IndustrialValley.Factory.FactoryGenerator.PlotDirection)
  - IndustrialValley.Factory.FactoryGenerator.gridSize
  - IndustrialValley.Factory.FactoryGenerator.plotData
  - IndustrialValley.Factory.FactoryGenerator.tilePrefab
  langs:
  - csharp
  - vb
  name: FactoryGenerator
  nameWithType: FactoryGenerator
  fullName: IndustrialValley.Factory.FactoryGenerator
  type: Class
  source:
    id: FactoryGenerator
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Factory\FactoryGenerator.cs
    startLine: 8
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Factory
  syntax:
    content: 'public class FactoryGenerator : Singleton<FactoryGenerator>'
    content.vb: Public Class FactoryGenerator Inherits Singleton(Of FactoryGenerator)
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  - IndustrialValley.Utility.Singleton{IndustrialValley.Factory.FactoryGenerator}
  inheritedMembers:
  - IndustrialValley.Utility.Singleton{IndustrialValley.Factory.FactoryGenerator}.Instance
  - IndustrialValley.Utility.Singleton{IndustrialValley.Factory.FactoryGenerator}.Awake
- uid: IndustrialValley.Factory.FactoryGenerator.gridSize
  commentId: F:IndustrialValley.Factory.FactoryGenerator.gridSize
  id: gridSize
  parent: IndustrialValley.Factory.FactoryGenerator
  langs:
  - csharp
  - vb
  name: gridSize
  nameWithType: FactoryGenerator.gridSize
  fullName: IndustrialValley.Factory.FactoryGenerator.gridSize
  type: Field
  source:
    id: gridSize
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Factory\FactoryGenerator.cs
    startLine: 18
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Factory
  syntax:
    content: public Vector2 gridSize
    return:
      type: UnityEngine.Vector2
    content.vb: Public gridSize As Vector2
- uid: IndustrialValley.Factory.FactoryGenerator.tilePrefab
  commentId: F:IndustrialValley.Factory.FactoryGenerator.tilePrefab
  id: tilePrefab
  parent: IndustrialValley.Factory.FactoryGenerator
  langs:
  - csharp
  - vb
  name: tilePrefab
  nameWithType: FactoryGenerator.tilePrefab
  fullName: IndustrialValley.Factory.FactoryGenerator.tilePrefab
  type: Field
  source:
    id: tilePrefab
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Factory\FactoryGenerator.cs
    startLine: 19
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Factory
  syntax:
    content: public GameObject tilePrefab
    return:
      type: UnityEngine.GameObject
    content.vb: Public tilePrefab As GameObject
- uid: IndustrialValley.Factory.FactoryGenerator.plotData
  commentId: F:IndustrialValley.Factory.FactoryGenerator.plotData
  id: plotData
  parent: IndustrialValley.Factory.FactoryGenerator
  langs:
  - csharp
  - vb
  name: plotData
  nameWithType: FactoryGenerator.plotData
  fullName: IndustrialValley.Factory.FactoryGenerator.plotData
  type: Field
  source:
    id: plotData
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Factory\FactoryGenerator.cs
    startLine: 20
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Factory
  syntax:
    content: public PlotData plotData
    return:
      type: IndustrialValley.Factory.PlotData
    content.vb: Public plotData As PlotData
- uid: IndustrialValley.Factory.FactoryGenerator.GetTileAt(UnityEngine.Vector3)
  commentId: M:IndustrialValley.Factory.FactoryGenerator.GetTileAt(UnityEngine.Vector3)
  id: GetTileAt(UnityEngine.Vector3)
  parent: IndustrialValley.Factory.FactoryGenerator
  langs:
  - csharp
  - vb
  name: GetTileAt(Vector3)
  nameWithType: FactoryGenerator.GetTileAt(Vector3)
  fullName: IndustrialValley.Factory.FactoryGenerator.GetTileAt(UnityEngine.Vector3)
  type: Method
  source:
    id: GetTileAt
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Factory\FactoryGenerator.cs
    startLine: 57
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Factory
  syntax:
    content: public GameObject GetTileAt(Vector3 position)
    parameters:
    - id: position
      type: UnityEngine.Vector3
    return:
      type: UnityEngine.GameObject
    content.vb: Public Function GetTileAt(position As Vector3) As GameObject
  overload: IndustrialValley.Factory.FactoryGenerator.GetTileAt*
- uid: IndustrialValley.Factory.FactoryGenerator.SpawnPlotAdjacent(UnityEngine.GameObject,IndustrialValley.Factory.FactoryGenerator.PlotDirection)
  commentId: M:IndustrialValley.Factory.FactoryGenerator.SpawnPlotAdjacent(UnityEngine.GameObject,IndustrialValley.Factory.FactoryGenerator.PlotDirection)
  id: SpawnPlotAdjacent(UnityEngine.GameObject,IndustrialValley.Factory.FactoryGenerator.PlotDirection)
  parent: IndustrialValley.Factory.FactoryGenerator
  langs:
  - csharp
  - vb
  name: SpawnPlotAdjacent(GameObject, PlotDirection)
  nameWithType: FactoryGenerator.SpawnPlotAdjacent(GameObject, FactoryGenerator.PlotDirection)
  fullName: IndustrialValley.Factory.FactoryGenerator.SpawnPlotAdjacent(UnityEngine.GameObject, IndustrialValley.Factory.FactoryGenerator.PlotDirection)
  type: Method
  source:
    id: SpawnPlotAdjacent
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Factory\FactoryGenerator.cs
    startLine: 64
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Factory
  syntax:
    content: public void SpawnPlotAdjacent(GameObject referencePlot, FactoryGenerator.PlotDirection direction)
    parameters:
    - id: referencePlot
      type: UnityEngine.GameObject
    - id: direction
      type: IndustrialValley.Factory.FactoryGenerator.PlotDirection
    content.vb: Public Sub SpawnPlotAdjacent(referencePlot As GameObject, direction As FactoryGenerator.PlotDirection)
  overload: IndustrialValley.Factory.FactoryGenerator.SpawnPlotAdjacent*
- uid: IndustrialValley.Factory.FactoryGenerator.SpawnPlot(UnityEngine.Vector3)
  commentId: M:IndustrialValley.Factory.FactoryGenerator.SpawnPlot(UnityEngine.Vector3)
  id: SpawnPlot(UnityEngine.Vector3)
  parent: IndustrialValley.Factory.FactoryGenerator
  langs:
  - csharp
  - vb
  name: SpawnPlot(Vector3)
  nameWithType: FactoryGenerator.SpawnPlot(Vector3)
  fullName: IndustrialValley.Factory.FactoryGenerator.SpawnPlot(UnityEngine.Vector3)
  type: Method
  source:
    id: SpawnPlot
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Factory\FactoryGenerator.cs
    startLine: 99
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Factory
  syntax:
    content: public void SpawnPlot(Vector3 position)
    parameters:
    - id: position
      type: UnityEngine.Vector3
    content.vb: Public Sub SpawnPlot(position As Vector3)
  overload: IndustrialValley.Factory.FactoryGenerator.SpawnPlot*
- uid: IndustrialValley.Factory.FactoryGenerator.GetBounds(UnityEngine.GameObject)
  commentId: M:IndustrialValley.Factory.FactoryGenerator.GetBounds(UnityEngine.GameObject)
  id: GetBounds(UnityEngine.GameObject)
  parent: IndustrialValley.Factory.FactoryGenerator
  langs:
  - csharp
  - vb
  name: GetBounds(GameObject)
  nameWithType: FactoryGenerator.GetBounds(GameObject)
  fullName: IndustrialValley.Factory.FactoryGenerator.GetBounds(UnityEngine.GameObject)
  type: Method
  source:
    id: GetBounds
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Factory\FactoryGenerator.cs
    startLine: 203
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Factory
  syntax:
    content: public Bounds GetBounds(GameObject plot)
    parameters:
    - id: plot
      type: UnityEngine.GameObject
    return:
      type: UnityEngine.Bounds
    content.vb: Public Function GetBounds(plot As GameObject) As Bounds
  overload: IndustrialValley.Factory.FactoryGenerator.GetBounds*
- uid: IndustrialValley.Factory.FactoryGenerator.GenerateTiles(UnityEngine.GameObject)
  commentId: M:IndustrialValley.Factory.FactoryGenerator.GenerateTiles(UnityEngine.GameObject)
  id: GenerateTiles(UnityEngine.GameObject)
  parent: IndustrialValley.Factory.FactoryGenerator
  langs:
  - csharp
  - vb
  name: GenerateTiles(GameObject)
  nameWithType: FactoryGenerator.GenerateTiles(GameObject)
  fullName: IndustrialValley.Factory.FactoryGenerator.GenerateTiles(UnityEngine.GameObject)
  type: Method
  source:
    id: GenerateTiles
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Factory\FactoryGenerator.cs
    startLine: 210
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Factory
  syntax:
    content: public void GenerateTiles(GameObject plot)
    parameters:
    - id: plot
      type: UnityEngine.GameObject
    content.vb: Public Sub GenerateTiles(plot As GameObject)
  overload: IndustrialValley.Factory.FactoryGenerator.GenerateTiles*
references:
- uid: IndustrialValley.Factory
  commentId: N:IndustrialValley.Factory
  href: IndustrialValley.html
  name: IndustrialValley.Factory
  nameWithType: IndustrialValley.Factory
  fullName: IndustrialValley.Factory
  spec.csharp:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Factory
    name: Factory
    href: IndustrialValley.Factory.html
  spec.vb:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Factory
    name: Factory
    href: IndustrialValley.Factory.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: IndustrialValley.Utility.Singleton{IndustrialValley.Factory.FactoryGenerator}
  commentId: T:IndustrialValley.Utility.Singleton{IndustrialValley.Factory.FactoryGenerator}
  parent: IndustrialValley.Utility
  definition: IndustrialValley.Utility.Singleton`1
  href: IndustrialValley.Utility.Singleton-1.html
  name: Singleton<FactoryGenerator>
  nameWithType: Singleton<FactoryGenerator>
  fullName: IndustrialValley.Utility.Singleton<IndustrialValley.Factory.FactoryGenerator>
  nameWithType.vb: Singleton(Of FactoryGenerator)
  fullName.vb: IndustrialValley.Utility.Singleton(Of IndustrialValley.Factory.FactoryGenerator)
  name.vb: Singleton(Of FactoryGenerator)
  spec.csharp:
  - uid: IndustrialValley.Utility.Singleton`1
    name: Singleton
    href: IndustrialValley.Utility.Singleton-1.html
  - name: <
  - uid: IndustrialValley.Factory.FactoryGenerator
    name: FactoryGenerator
    href: IndustrialValley.Factory.FactoryGenerator.html
  - name: '>'
  spec.vb:
  - uid: IndustrialValley.Utility.Singleton`1
    name: Singleton
    href: IndustrialValley.Utility.Singleton-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: IndustrialValley.Factory.FactoryGenerator
    name: FactoryGenerator
    href: IndustrialValley.Factory.FactoryGenerator.html
  - name: )
- uid: IndustrialValley.Utility.Singleton{IndustrialValley.Factory.FactoryGenerator}.Instance
  commentId: P:IndustrialValley.Utility.Singleton{IndustrialValley.Factory.FactoryGenerator}.Instance
  parent: IndustrialValley.Utility.Singleton{IndustrialValley.Factory.FactoryGenerator}
  definition: IndustrialValley.Utility.Singleton`1.Instance
  href: IndustrialValley.Utility.Singleton-1.Instance.html#IndustrialValley_Utility_Singleton_1_Instance
  name: Instance
  nameWithType: Singleton<FactoryGenerator>.Instance
  fullName: IndustrialValley.Utility.Singleton<IndustrialValley.Factory.FactoryGenerator>.Instance
  nameWithType.vb: Singleton(Of FactoryGenerator).Instance
  fullName.vb: IndustrialValley.Utility.Singleton(Of IndustrialValley.Factory.FactoryGenerator).Instance
- uid: IndustrialValley.Utility.Singleton{IndustrialValley.Factory.FactoryGenerator}.Awake
  commentId: M:IndustrialValley.Utility.Singleton{IndustrialValley.Factory.FactoryGenerator}.Awake
  parent: IndustrialValley.Utility.Singleton{IndustrialValley.Factory.FactoryGenerator}
  definition: IndustrialValley.Utility.Singleton`1.Awake
  href: IndustrialValley.Utility.Singleton-1.Awake.html#IndustrialValley_Utility_Singleton_1_Awake
  name: Awake()
  nameWithType: Singleton<FactoryGenerator>.Awake()
  fullName: IndustrialValley.Utility.Singleton<IndustrialValley.Factory.FactoryGenerator>.Awake()
  nameWithType.vb: Singleton(Of FactoryGenerator).Awake()
  fullName.vb: IndustrialValley.Utility.Singleton(Of IndustrialValley.Factory.FactoryGenerator).Awake()
  spec.csharp:
  - uid: IndustrialValley.Utility.Singleton{IndustrialValley.Factory.FactoryGenerator}.Awake
    name: Awake
    href: IndustrialValley.Utility.Singleton-1.Awake.html#IndustrialValley_Utility_Singleton_1_Awake
  - name: (
  - name: )
  spec.vb:
  - uid: IndustrialValley.Utility.Singleton{IndustrialValley.Factory.FactoryGenerator}.Awake
    name: Awake
    href: IndustrialValley.Utility.Singleton-1.Awake.html#IndustrialValley_Utility_Singleton_1_Awake
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: IndustrialValley.Utility.Singleton`1
  commentId: T:IndustrialValley.Utility.Singleton`1
  href: IndustrialValley.Utility.Singleton-1.html
  name: Singleton<T>
  nameWithType: Singleton<T>
  fullName: IndustrialValley.Utility.Singleton<T>
  nameWithType.vb: Singleton(Of T)
  fullName.vb: IndustrialValley.Utility.Singleton(Of T)
  name.vb: Singleton(Of T)
  spec.csharp:
  - uid: IndustrialValley.Utility.Singleton`1
    name: Singleton
    href: IndustrialValley.Utility.Singleton-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: IndustrialValley.Utility.Singleton`1
    name: Singleton
    href: IndustrialValley.Utility.Singleton-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: IndustrialValley.Utility
  commentId: N:IndustrialValley.Utility
  href: IndustrialValley.html
  name: IndustrialValley.Utility
  nameWithType: IndustrialValley.Utility
  fullName: IndustrialValley.Utility
  spec.csharp:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Utility
    name: Utility
    href: IndustrialValley.Utility.html
  spec.vb:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Utility
    name: Utility
    href: IndustrialValley.Utility.html
- uid: IndustrialValley.Utility.Singleton`1.Instance
  commentId: P:IndustrialValley.Utility.Singleton`1.Instance
  href: IndustrialValley.Utility.Singleton-1.Instance.html#IndustrialValley_Utility_Singleton_1_Instance
  name: Instance
  nameWithType: Singleton<T>.Instance
  fullName: IndustrialValley.Utility.Singleton<T>.Instance
  nameWithType.vb: Singleton(Of T).Instance
  fullName.vb: IndustrialValley.Utility.Singleton(Of T).Instance
- uid: IndustrialValley.Utility.Singleton`1.Awake
  commentId: M:IndustrialValley.Utility.Singleton`1.Awake
  href: IndustrialValley.Utility.Singleton-1.Awake.html#IndustrialValley_Utility_Singleton_1_Awake
  name: Awake()
  nameWithType: Singleton<T>.Awake()
  fullName: IndustrialValley.Utility.Singleton<T>.Awake()
  nameWithType.vb: Singleton(Of T).Awake()
  fullName.vb: IndustrialValley.Utility.Singleton(Of T).Awake()
  spec.csharp:
  - uid: IndustrialValley.Utility.Singleton`1.Awake
    name: Awake
    href: IndustrialValley.Utility.Singleton-1.Awake.html#IndustrialValley_Utility_Singleton_1_Awake
  - name: (
  - name: )
  spec.vb:
  - uid: IndustrialValley.Utility.Singleton`1.Awake
    name: Awake
    href: IndustrialValley.Utility.Singleton-1.Awake.html#IndustrialValley_Utility_Singleton_1_Awake
  - name: (
  - name: )
- uid: UnityEngine.Vector2
  commentId: T:UnityEngine.Vector2
  parent: UnityEngine
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine.GameObject
  commentId: T:UnityEngine.GameObject
  parent: UnityEngine
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: IndustrialValley.Factory.PlotData
  commentId: T:IndustrialValley.Factory.PlotData
  parent: IndustrialValley.Factory
  href: IndustrialValley.Factory.PlotData.html
  name: PlotData
  nameWithType: PlotData
  fullName: IndustrialValley.Factory.PlotData
- uid: IndustrialValley.Factory.FactoryGenerator.GetTileAt*
  commentId: Overload:IndustrialValley.Factory.FactoryGenerator.GetTileAt
  href: IndustrialValley.Factory.FactoryGenerator.GetTileAt.html#IndustrialValley_Factory_FactoryGenerator_GetTileAt_UnityEngine_Vector3_
  name: GetTileAt
  nameWithType: FactoryGenerator.GetTileAt
  fullName: IndustrialValley.Factory.FactoryGenerator.GetTileAt
- uid: UnityEngine.Vector3
  commentId: T:UnityEngine.Vector3
  parent: UnityEngine
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: IndustrialValley.Factory.FactoryGenerator.SpawnPlotAdjacent*
  commentId: Overload:IndustrialValley.Factory.FactoryGenerator.SpawnPlotAdjacent
  href: IndustrialValley.Factory.FactoryGenerator.SpawnPlotAdjacent.html#IndustrialValley_Factory_FactoryGenerator_SpawnPlotAdjacent_UnityEngine_GameObject_IndustrialValley_Factory_FactoryGenerator_PlotDirection_
  name: SpawnPlotAdjacent
  nameWithType: FactoryGenerator.SpawnPlotAdjacent
  fullName: IndustrialValley.Factory.FactoryGenerator.SpawnPlotAdjacent
- uid: IndustrialValley.Factory.FactoryGenerator.PlotDirection
  commentId: T:IndustrialValley.Factory.FactoryGenerator.PlotDirection
  parent: IndustrialValley.Factory
  href: IndustrialValley.Factory.FactoryGenerator.html
  name: FactoryGenerator.PlotDirection
  nameWithType: FactoryGenerator.PlotDirection
  fullName: IndustrialValley.Factory.FactoryGenerator.PlotDirection
  spec.csharp:
  - uid: IndustrialValley.Factory.FactoryGenerator
    name: FactoryGenerator
    href: IndustrialValley.Factory.FactoryGenerator.html
  - name: .
  - uid: IndustrialValley.Factory.FactoryGenerator.PlotDirection
    name: PlotDirection
    href: IndustrialValley.Factory.FactoryGenerator.PlotDirection.html
  spec.vb:
  - uid: IndustrialValley.Factory.FactoryGenerator
    name: FactoryGenerator
    href: IndustrialValley.Factory.FactoryGenerator.html
  - name: .
  - uid: IndustrialValley.Factory.FactoryGenerator.PlotDirection
    name: PlotDirection
    href: IndustrialValley.Factory.FactoryGenerator.PlotDirection.html
- uid: IndustrialValley.Factory.FactoryGenerator.SpawnPlot*
  commentId: Overload:IndustrialValley.Factory.FactoryGenerator.SpawnPlot
  href: IndustrialValley.Factory.FactoryGenerator.SpawnPlot.html#IndustrialValley_Factory_FactoryGenerator_SpawnPlot_UnityEngine_Vector3_
  name: SpawnPlot
  nameWithType: FactoryGenerator.SpawnPlot
  fullName: IndustrialValley.Factory.FactoryGenerator.SpawnPlot
- uid: IndustrialValley.Factory.FactoryGenerator.GetBounds*
  commentId: Overload:IndustrialValley.Factory.FactoryGenerator.GetBounds
  href: IndustrialValley.Factory.FactoryGenerator.GetBounds.html#IndustrialValley_Factory_FactoryGenerator_GetBounds_UnityEngine_GameObject_
  name: GetBounds
  nameWithType: FactoryGenerator.GetBounds
  fullName: IndustrialValley.Factory.FactoryGenerator.GetBounds
- uid: UnityEngine.Bounds
  commentId: T:UnityEngine.Bounds
  parent: UnityEngine
  isExternal: true
  name: Bounds
  nameWithType: Bounds
  fullName: UnityEngine.Bounds
- uid: IndustrialValley.Factory.FactoryGenerator.GenerateTiles*
  commentId: Overload:IndustrialValley.Factory.FactoryGenerator.GenerateTiles
  href: IndustrialValley.Factory.FactoryGenerator.GenerateTiles.html#IndustrialValley_Factory_FactoryGenerator_GenerateTiles_UnityEngine_GameObject_
  name: GenerateTiles
  nameWithType: FactoryGenerator.GenerateTiles
  fullName: IndustrialValley.Factory.FactoryGenerator.GenerateTiles
memberLayout: SeparatePages
