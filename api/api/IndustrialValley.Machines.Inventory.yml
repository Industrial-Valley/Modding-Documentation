### YamlMime:ManagedReference
items:
- uid: IndustrialValley.Machines.Inventory
  commentId: T:IndustrialValley.Machines.Inventory
  id: Inventory
  parent: IndustrialValley.Machines
  children:
  - IndustrialValley.Machines.Inventory.Add(ItemData,System.Int32)
  - IndustrialValley.Machines.Inventory.Clear
  - IndustrialValley.Machines.Inventory.GetSaveData
  - IndustrialValley.Machines.Inventory.HasSpace(ItemData,System.Int32)
  - IndustrialValley.Machines.Inventory.MaxSlots
  - IndustrialValley.Machines.Inventory.OnInventoryUpdated
  - IndustrialValley.Machines.Inventory.Remove(ItemData,System.Int32)
  - IndustrialValley.Machines.Inventory.Slots
  langs:
  - csharp
  - vb
  name: Inventory
  nameWithType: Inventory
  fullName: IndustrialValley.Machines.Inventory
  type: Class
  source:
    id: Inventory
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\Inventory.cs
    startLine: 15
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  syntax:
    content: public class Inventory
    content.vb: Public Class Inventory
  inheritance:
  - System.Object
- uid: IndustrialValley.Machines.Inventory.MaxSlots
  commentId: P:IndustrialValley.Machines.Inventory.MaxSlots
  id: MaxSlots
  parent: IndustrialValley.Machines.Inventory
  langs:
  - csharp
  - vb
  name: MaxSlots
  nameWithType: Inventory.MaxSlots
  fullName: IndustrialValley.Machines.Inventory.MaxSlots
  type: Property
  source:
    id: MaxSlots
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\Inventory.cs
    startLine: 20
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  summary: The maximum number of unique items that can be stored in the inventory.
  example: []
  syntax:
    content: public int MaxSlots { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxSlots As Integer
  overload: IndustrialValley.Machines.Inventory.MaxSlots*
- uid: IndustrialValley.Machines.Inventory.Slots
  commentId: P:IndustrialValley.Machines.Inventory.Slots
  id: Slots
  parent: IndustrialValley.Machines.Inventory
  langs:
  - csharp
  - vb
  name: Slots
  nameWithType: Inventory.Slots
  fullName: IndustrialValley.Machines.Inventory.Slots
  type: Property
  source:
    id: Slots
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\Inventory.cs
    startLine: 25
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  summary: The list of items in the inventory.
  example: []
  syntax:
    content: public List<Inventory.InventorySlot> Slots { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{IndustrialValley.Machines.Inventory.InventorySlot}
    content.vb: Public ReadOnly Property Slots As List(Of Inventory.InventorySlot)
  overload: IndustrialValley.Machines.Inventory.Slots*
- uid: IndustrialValley.Machines.Inventory.OnInventoryUpdated
  commentId: E:IndustrialValley.Machines.Inventory.OnInventoryUpdated
  id: OnInventoryUpdated
  parent: IndustrialValley.Machines.Inventory
  langs:
  - csharp
  - vb
  name: OnInventoryUpdated
  nameWithType: Inventory.OnInventoryUpdated
  fullName: IndustrialValley.Machines.Inventory.OnInventoryUpdated
  type: Event
  source:
    id: OnInventoryUpdated
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\Inventory.cs
    startLine: 30
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  summary: Event that is triggered when an item is added or removed from the inventory.
  example: []
  syntax:
    content: public event InventoryUpdateHandler OnInventoryUpdated
    return:
      type: IndustrialValley.Machines.InventoryUpdateHandler
    content.vb: Public Event OnInventoryUpdated As InventoryUpdateHandler
- uid: IndustrialValley.Machines.Inventory.Clear
  commentId: M:IndustrialValley.Machines.Inventory.Clear
  id: Clear
  parent: IndustrialValley.Machines.Inventory
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: Inventory.Clear()
  fullName: IndustrialValley.Machines.Inventory.Clear()
  type: Method
  source:
    id: Clear
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\Inventory.cs
    startLine: 35
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  summary: Clears the inventory, removing all items.
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: IndustrialValley.Machines.Inventory.Clear*
- uid: IndustrialValley.Machines.Inventory.Add(ItemData,System.Int32)
  commentId: M:IndustrialValley.Machines.Inventory.Add(ItemData,System.Int32)
  id: Add(ItemData,System.Int32)
  parent: IndustrialValley.Machines.Inventory
  langs:
  - csharp
  - vb
  name: Add(ItemData, int)
  nameWithType: Inventory.Add(ItemData, int)
  fullName: IndustrialValley.Machines.Inventory.Add(ItemData, int)
  type: Method
  source:
    id: Add
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\Inventory.cs
    startLine: 46
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  summary: Adds an item to the inventory.
  example: []
  syntax:
    content: public bool Add(ItemData item, int quantity = 1)
    parameters:
    - id: item
      type: ItemData
      description: ''
    - id: quantity
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: True if the item was added successfully, false otherwise.
    content.vb: Public Function Add(item As ItemData, quantity As Integer = 1) As Boolean
  overload: IndustrialValley.Machines.Inventory.Add*
  nameWithType.vb: Inventory.Add(ItemData, Integer)
  fullName.vb: IndustrialValley.Machines.Inventory.Add(ItemData, Integer)
  name.vb: Add(ItemData, Integer)
- uid: IndustrialValley.Machines.Inventory.HasSpace(ItemData,System.Int32)
  commentId: M:IndustrialValley.Machines.Inventory.HasSpace(ItemData,System.Int32)
  id: HasSpace(ItemData,System.Int32)
  parent: IndustrialValley.Machines.Inventory
  langs:
  - csharp
  - vb
  name: HasSpace(ItemData, int)
  nameWithType: Inventory.HasSpace(ItemData, int)
  fullName: IndustrialValley.Machines.Inventory.HasSpace(ItemData, int)
  type: Method
  source:
    id: HasSpace
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\Inventory.cs
    startLine: 79
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  summary: If the inventory has space for the specified item and quantity.
  example: []
  syntax:
    content: public bool HasSpace(ItemData item, int quantity = 1)
    parameters:
    - id: item
      type: ItemData
      description: ''
    - id: quantity
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function HasSpace(item As ItemData, quantity As Integer = 1) As Boolean
  overload: IndustrialValley.Machines.Inventory.HasSpace*
  nameWithType.vb: Inventory.HasSpace(ItemData, Integer)
  fullName.vb: IndustrialValley.Machines.Inventory.HasSpace(ItemData, Integer)
  name.vb: HasSpace(ItemData, Integer)
- uid: IndustrialValley.Machines.Inventory.Remove(ItemData,System.Int32)
  commentId: M:IndustrialValley.Machines.Inventory.Remove(ItemData,System.Int32)
  id: Remove(ItemData,System.Int32)
  parent: IndustrialValley.Machines.Inventory
  langs:
  - csharp
  - vb
  name: Remove(ItemData, int)
  nameWithType: Inventory.Remove(ItemData, int)
  fullName: IndustrialValley.Machines.Inventory.Remove(ItemData, int)
  type: Method
  source:
    id: Remove
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\Inventory.cs
    startLine: 98
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  summary: Removes an item from the inventory.
  example: []
  syntax:
    content: public bool Remove(ItemData item, int quantity = 1)
    parameters:
    - id: item
      type: ItemData
      description: ''
    - id: quantity
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: True if the item was removed successfully, false otherwise.
    content.vb: Public Function Remove(item As ItemData, quantity As Integer = 1) As Boolean
  overload: IndustrialValley.Machines.Inventory.Remove*
  nameWithType.vb: Inventory.Remove(ItemData, Integer)
  fullName.vb: IndustrialValley.Machines.Inventory.Remove(ItemData, Integer)
  name.vb: Remove(ItemData, Integer)
- uid: IndustrialValley.Machines.Inventory.GetSaveData
  commentId: M:IndustrialValley.Machines.Inventory.GetSaveData
  id: GetSaveData
  parent: IndustrialValley.Machines.Inventory
  langs:
  - csharp
  - vb
  name: GetSaveData()
  nameWithType: Inventory.GetSaveData()
  fullName: IndustrialValley.Machines.Inventory.GetSaveData()
  type: Method
  source:
    id: GetSaveData
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\Inventory.cs
    startLine: 117
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  syntax:
    content: public List<Inventory.InventorySlotSaveData> GetSaveData()
    return:
      type: System.Collections.Generic.List{IndustrialValley.Machines.Inventory.InventorySlotSaveData}
    content.vb: Public Function GetSaveData() As List(Of Inventory.InventorySlotSaveData)
  overload: IndustrialValley.Machines.Inventory.GetSaveData*
references:
- uid: IndustrialValley.Machines
  commentId: N:IndustrialValley.Machines
  href: IndustrialValley.html
  name: IndustrialValley.Machines
  nameWithType: IndustrialValley.Machines
  fullName: IndustrialValley.Machines
  spec.csharp:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Machines
    name: Machines
    href: IndustrialValley.Machines.html
  spec.vb:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Machines
    name: Machines
    href: IndustrialValley.Machines.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: IndustrialValley.Machines.Inventory.MaxSlots*
  commentId: Overload:IndustrialValley.Machines.Inventory.MaxSlots
  href: IndustrialValley.Machines.Inventory.MaxSlots.html#IndustrialValley_Machines_Inventory_MaxSlots
  name: MaxSlots
  nameWithType: Inventory.MaxSlots
  fullName: IndustrialValley.Machines.Inventory.MaxSlots
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: IndustrialValley.Machines.Inventory.Slots*
  commentId: Overload:IndustrialValley.Machines.Inventory.Slots
  href: IndustrialValley.Machines.Inventory.Slots.html#IndustrialValley_Machines_Inventory_Slots
  name: Slots
  nameWithType: Inventory.Slots
  fullName: IndustrialValley.Machines.Inventory.Slots
- uid: System.Collections.Generic.List{IndustrialValley.Machines.Inventory.InventorySlot}
  commentId: T:System.Collections.Generic.List{IndustrialValley.Machines.Inventory.InventorySlot}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Inventory.InventorySlot>
  nameWithType: List<Inventory.InventorySlot>
  fullName: System.Collections.Generic.List<IndustrialValley.Machines.Inventory.InventorySlot>
  nameWithType.vb: List(Of Inventory.InventorySlot)
  fullName.vb: System.Collections.Generic.List(Of IndustrialValley.Machines.Inventory.InventorySlot)
  name.vb: List(Of Inventory.InventorySlot)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: IndustrialValley.Machines.Inventory
    name: Inventory
    href: IndustrialValley.Machines.Inventory.html
  - name: .
  - uid: IndustrialValley.Machines.Inventory.InventorySlot
    name: InventorySlot
    href: IndustrialValley.Machines.Inventory.InventorySlot.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: IndustrialValley.Machines.Inventory
    name: Inventory
    href: IndustrialValley.Machines.Inventory.html
  - name: .
  - uid: IndustrialValley.Machines.Inventory.InventorySlot
    name: InventorySlot
    href: IndustrialValley.Machines.Inventory.InventorySlot.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: IndustrialValley.Machines.InventoryUpdateHandler
  commentId: T:IndustrialValley.Machines.InventoryUpdateHandler
  parent: IndustrialValley.Machines
  href: IndustrialValley.Machines.InventoryUpdateHandler.html
  name: InventoryUpdateHandler
  nameWithType: InventoryUpdateHandler
  fullName: IndustrialValley.Machines.InventoryUpdateHandler
- uid: IndustrialValley.Machines.Inventory.Clear*
  commentId: Overload:IndustrialValley.Machines.Inventory.Clear
  href: IndustrialValley.Machines.Inventory.Clear.html#IndustrialValley_Machines_Inventory_Clear
  name: Clear
  nameWithType: Inventory.Clear
  fullName: IndustrialValley.Machines.Inventory.Clear
- uid: IndustrialValley.Machines.Inventory.Add*
  commentId: Overload:IndustrialValley.Machines.Inventory.Add
  href: IndustrialValley.Machines.Inventory.Add.html#IndustrialValley_Machines_Inventory_Add_ItemData_System_Int32_
  name: Add
  nameWithType: Inventory.Add
  fullName: IndustrialValley.Machines.Inventory.Add
- uid: ItemData
  commentId: T:ItemData
  href: ItemData.html
  name: ItemData
  nameWithType: ItemData
  fullName: ItemData
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: IndustrialValley.Machines.Inventory.HasSpace*
  commentId: Overload:IndustrialValley.Machines.Inventory.HasSpace
  href: IndustrialValley.Machines.Inventory.HasSpace.html#IndustrialValley_Machines_Inventory_HasSpace_ItemData_System_Int32_
  name: HasSpace
  nameWithType: Inventory.HasSpace
  fullName: IndustrialValley.Machines.Inventory.HasSpace
- uid: IndustrialValley.Machines.Inventory.Remove*
  commentId: Overload:IndustrialValley.Machines.Inventory.Remove
  href: IndustrialValley.Machines.Inventory.Remove.html#IndustrialValley_Machines_Inventory_Remove_ItemData_System_Int32_
  name: Remove
  nameWithType: Inventory.Remove
  fullName: IndustrialValley.Machines.Inventory.Remove
- uid: IndustrialValley.Machines.Inventory.GetSaveData*
  commentId: Overload:IndustrialValley.Machines.Inventory.GetSaveData
  href: IndustrialValley.Machines.Inventory.GetSaveData.html#IndustrialValley_Machines_Inventory_GetSaveData
  name: GetSaveData
  nameWithType: Inventory.GetSaveData
  fullName: IndustrialValley.Machines.Inventory.GetSaveData
- uid: System.Collections.Generic.List{IndustrialValley.Machines.Inventory.InventorySlotSaveData}
  commentId: T:System.Collections.Generic.List{IndustrialValley.Machines.Inventory.InventorySlotSaveData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Inventory.InventorySlotSaveData>
  nameWithType: List<Inventory.InventorySlotSaveData>
  fullName: System.Collections.Generic.List<IndustrialValley.Machines.Inventory.InventorySlotSaveData>
  nameWithType.vb: List(Of Inventory.InventorySlotSaveData)
  fullName.vb: System.Collections.Generic.List(Of IndustrialValley.Machines.Inventory.InventorySlotSaveData)
  name.vb: List(Of Inventory.InventorySlotSaveData)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: IndustrialValley.Machines.Inventory
    name: Inventory
    href: IndustrialValley.Machines.Inventory.html
  - name: .
  - uid: IndustrialValley.Machines.Inventory.InventorySlotSaveData
    name: InventorySlotSaveData
    href: IndustrialValley.Machines.Inventory.InventorySlotSaveData.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: IndustrialValley.Machines.Inventory
    name: Inventory
    href: IndustrialValley.Machines.Inventory.html
  - name: .
  - uid: IndustrialValley.Machines.Inventory.InventorySlotSaveData
    name: InventorySlotSaveData
    href: IndustrialValley.Machines.Inventory.InventorySlotSaveData.html
  - name: )
memberLayout: SeparatePages
