### YamlMime:ManagedReference
items:
- uid: IndustrialValley.Machines.BaseMachine
  commentId: T:IndustrialValley.Machines.BaseMachine
  id: BaseMachine
  parent: IndustrialValley.Machines
  children:
  - IndustrialValley.Machines.BaseMachine.CanAcceptItem(IndustrialValley.Conveyors.ConveyorItem)
  - IndustrialValley.Machines.BaseMachine.FindClosestDownstreamConveyor(IndustrialValley.Conveyors.ConveyorItem)
  - IndustrialValley.Machines.BaseMachine.GetInputPositions
  - IndustrialValley.Machines.BaseMachine.GetOutputPositions
  - IndustrialValley.Machines.BaseMachine.InsertItem(IndustrialValley.Conveyors.ConveyorItem)
  - IndustrialValley.Machines.BaseMachine.OnItemInserted(IndustrialValley.Conveyors.ConveyorItem)
  - IndustrialValley.Machines.BaseMachine.OnLoad(IndustrialValley.Saving.SaveableData)
  - IndustrialValley.Machines.BaseMachine.OnSave
  - IndustrialValley.Machines.BaseMachine.OnUpdate
  - IndustrialValley.Machines.BaseMachine.OutputItem(IndustrialValley.Conveyors.ConveyorItem)
  - IndustrialValley.Machines.BaseMachine.handoffDetectRadius
  - IndustrialValley.Machines.BaseMachine.handoffOffsets
  - IndustrialValley.Machines.BaseMachine.inputDetectRadius
  - IndustrialValley.Machines.BaseMachine.inputOffsets
  - IndustrialValley.Machines.BaseMachine.lastOutputTime
  - IndustrialValley.Machines.BaseMachine.outputSpeed
  langs:
  - csharp
  - vb
  name: BaseMachine
  nameWithType: BaseMachine
  fullName: IndustrialValley.Machines.BaseMachine
  type: Class
  source:
    id: BaseMachine
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 8
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  syntax:
    content: 'public class BaseMachine : MonoBehaviour, IConveyor, ISavable'
    content.vb: Public Class BaseMachine Inherits MonoBehaviour Implements IConveyor, ISavable
  inheritance:
  - System.Object
  - UnityEngine.Object
  - UnityEngine.Component
  - UnityEngine.Behaviour
  - UnityEngine.MonoBehaviour
  derivedClasses:
  - IndustrialValley.Machines.ClickerMachine
  - IndustrialValley.Machines.RecipeMachine
  - IndustrialValley.Machines.SellingMachine
  - IndustrialValley.Machines.StorageMachine
  implements:
  - IndustrialValley.Conveyors.IConveyor
  - IndustrialValley.Saving.ISavable
- uid: IndustrialValley.Machines.BaseMachine.handoffDetectRadius
  commentId: F:IndustrialValley.Machines.BaseMachine.handoffDetectRadius
  id: handoffDetectRadius
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: handoffDetectRadius
  nameWithType: BaseMachine.handoffDetectRadius
  fullName: IndustrialValley.Machines.BaseMachine.handoffDetectRadius
  type: Field
  source:
    id: handoffDetectRadius
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 11
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  syntax:
    content: >-
      [Tooltip("Radius around each output gizmo or center for OverlapSphere.")]

      public float handoffDetectRadius
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("Radius around each output gizmo or center for OverlapSphere.")>

      Public handoffDetectRadius As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Radius around each output gizmo or center for OverlapSphere.
- uid: IndustrialValley.Machines.BaseMachine.handoffOffsets
  commentId: F:IndustrialValley.Machines.BaseMachine.handoffOffsets
  id: handoffOffsets
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: handoffOffsets
  nameWithType: BaseMachine.handoffOffsets
  fullName: IndustrialValley.Machines.BaseMachine.handoffOffsets
  type: Field
  source:
    id: handoffOffsets
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 14
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  syntax:
    content: >-
      [Header("Handoff Offsets (Local‐Space)")]

      [Tooltip("Offsets (local) where this machine’s items exit to downstream conveyors.")]

      public Vector3[] handoffOffsets
    return:
      type: UnityEngine.Vector3[]
    content.vb: >-
      <Header("Handoff Offsets (Local‐Space)")>

      <Tooltip("Offsets (local) where this machine’s items exit to downstream conveyors.")>

      Public handoffOffsets As Vector3()
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Handoff Offsets (Local‐Space)
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Offsets (local) where this machine’s items exit to downstream conveyors.
- uid: IndustrialValley.Machines.BaseMachine.inputDetectRadius
  commentId: F:IndustrialValley.Machines.BaseMachine.inputDetectRadius
  id: inputDetectRadius
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: inputDetectRadius
  nameWithType: BaseMachine.inputDetectRadius
  fullName: IndustrialValley.Machines.BaseMachine.inputDetectRadius
  type: Field
  source:
    id: inputDetectRadius
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 17
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  syntax:
    content: >-
      [Tooltip("Radius around each input gizmo or center for OverlapSphere.")]

      public float inputDetectRadius
    return:
      type: System.Single
    content.vb: >-
      <Tooltip("Radius around each input gizmo or center for OverlapSphere.")>

      Public inputDetectRadius As Single
  attributes:
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Radius around each input gizmo or center for OverlapSphere.
- uid: IndustrialValley.Machines.BaseMachine.inputOffsets
  commentId: F:IndustrialValley.Machines.BaseMachine.inputOffsets
  id: inputOffsets
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: inputOffsets
  nameWithType: BaseMachine.inputOffsets
  fullName: IndustrialValley.Machines.BaseMachine.inputOffsets
  type: Field
  source:
    id: inputOffsets
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 20
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  syntax:
    content: >-
      [Header("Input Offsets (Local‐Space)")]

      [Tooltip("Offsets (local) where upstream conveyors feed items into this machine.")]

      public Vector3[] inputOffsets
    return:
      type: UnityEngine.Vector3[]
    content.vb: >-
      <Header("Input Offsets (Local‐Space)")>

      <Tooltip("Offsets (local) where upstream conveyors feed items into this machine.")>

      Public inputOffsets As Vector3()
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Input Offsets (Local‐Space)
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Offsets (local) where upstream conveyors feed items into this machine.
- uid: IndustrialValley.Machines.BaseMachine.outputSpeed
  commentId: F:IndustrialValley.Machines.BaseMachine.outputSpeed
  id: outputSpeed
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: outputSpeed
  nameWithType: BaseMachine.outputSpeed
  fullName: IndustrialValley.Machines.BaseMachine.outputSpeed
  type: Field
  source:
    id: outputSpeed
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 23
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  syntax:
    content: >-
      [Header("Output Speed")]

      [Tooltip("How fast items move through this machine (in seconds).")]

      public float outputSpeed
    return:
      type: System.Single
    content.vb: >-
      <Header("Output Speed")>

      <Tooltip("How fast items move through this machine (in seconds).")>

      Public outputSpeed As Single
  attributes:
  - type: UnityEngine.HeaderAttribute
    ctor: UnityEngine.HeaderAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Output Speed
  - type: UnityEngine.TooltipAttribute
    ctor: UnityEngine.TooltipAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: How fast items move through this machine (in seconds).
- uid: IndustrialValley.Machines.BaseMachine.lastOutputTime
  commentId: F:IndustrialValley.Machines.BaseMachine.lastOutputTime
  id: lastOutputTime
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: lastOutputTime
  nameWithType: BaseMachine.lastOutputTime
  fullName: IndustrialValley.Machines.BaseMachine.lastOutputTime
  type: Field
  source:
    id: lastOutputTime
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 27
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  syntax:
    content: protected float lastOutputTime
    return:
      type: System.Single
    content.vb: Protected lastOutputTime As Single
- uid: IndustrialValley.Machines.BaseMachine.InsertItem(IndustrialValley.Conveyors.ConveyorItem)
  commentId: M:IndustrialValley.Machines.BaseMachine.InsertItem(IndustrialValley.Conveyors.ConveyorItem)
  id: InsertItem(IndustrialValley.Conveyors.ConveyorItem)
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: InsertItem(ConveyorItem)
  nameWithType: BaseMachine.InsertItem(ConveyorItem)
  fullName: IndustrialValley.Machines.BaseMachine.InsertItem(IndustrialValley.Conveyors.ConveyorItem)
  type: Method
  source:
    id: InsertItem
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 50
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  summary: >-
    Insert a new ConveyorItem onto this conveyor/machine.  The implementing class

    should position the item’s visual at its “input” and begin moving/processing it.
  example: []
  syntax:
    content: public void InsertItem(ConveyorItem item)
    parameters:
    - id: item
      type: IndustrialValley.Conveyors.ConveyorItem
      description: The ConveyorItem (including its prefab) to place here.
    content.vb: Public Sub InsertItem(item As ConveyorItem)
  overload: IndustrialValley.Machines.BaseMachine.InsertItem*
  implements:
  - IndustrialValley.Conveyors.IConveyor.InsertItem(IndustrialValley.Conveyors.ConveyorItem)
- uid: IndustrialValley.Machines.BaseMachine.GetInputPositions
  commentId: M:IndustrialValley.Machines.BaseMachine.GetInputPositions
  id: GetInputPositions
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: GetInputPositions()
  nameWithType: BaseMachine.GetInputPositions()
  fullName: IndustrialValley.Machines.BaseMachine.GetInputPositions()
  type: Method
  source:
    id: GetInputPositions
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 69
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  summary: >-
    Returns all world-space “green” input positions:

    • transform.position + each inputOffset

    • AND the splitter’s own center (transform.position)
  example: []
  syntax:
    content: public List<Vector3> GetInputPositions()
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector3}
    content.vb: Public Function GetInputPositions() As List(Of Vector3)
  overload: IndustrialValley.Machines.BaseMachine.GetInputPositions*
  implements:
  - IndustrialValley.Conveyors.IConveyor.GetInputPositions
- uid: IndustrialValley.Machines.BaseMachine.GetOutputPositions
  commentId: M:IndustrialValley.Machines.BaseMachine.GetOutputPositions
  id: GetOutputPositions
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: GetOutputPositions()
  nameWithType: BaseMachine.GetOutputPositions()
  fullName: IndustrialValley.Machines.BaseMachine.GetOutputPositions()
  type: Method
  source:
    id: GetOutputPositions
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 87
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  summary: >-
    Returns all world-space “red” output positions:

    • transform.position + each handoffOffset

    • AND the splitter’s own center (transform.position)
  example: []
  syntax:
    content: public List<Vector3> GetOutputPositions()
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector3}
    content.vb: Public Function GetOutputPositions() As List(Of Vector3)
  overload: IndustrialValley.Machines.BaseMachine.GetOutputPositions*
  implements:
  - IndustrialValley.Conveyors.IConveyor.GetOutputPositions
- uid: IndustrialValley.Machines.BaseMachine.CanAcceptItem(IndustrialValley.Conveyors.ConveyorItem)
  commentId: M:IndustrialValley.Machines.BaseMachine.CanAcceptItem(IndustrialValley.Conveyors.ConveyorItem)
  id: CanAcceptItem(IndustrialValley.Conveyors.ConveyorItem)
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: CanAcceptItem(ConveyorItem)
  nameWithType: BaseMachine.CanAcceptItem(ConveyorItem)
  fullName: IndustrialValley.Machines.BaseMachine.CanAcceptItem(IndustrialValley.Conveyors.ConveyorItem)
  type: Method
  source:
    id: CanAcceptItem
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 100
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  summary: Return true if this conveyor/machine has room to accept one more ConveyorItem.
  example: []
  syntax:
    content: public virtual bool CanAcceptItem(ConveyorItem item)
    parameters:
    - id: item
      type: IndustrialValley.Conveyors.ConveyorItem
    return:
      type: System.Boolean
    content.vb: Public Overridable Function CanAcceptItem(item As ConveyorItem) As Boolean
  overload: IndustrialValley.Machines.BaseMachine.CanAcceptItem*
  implements:
  - IndustrialValley.Conveyors.IConveyor.CanAcceptItem(IndustrialValley.Conveyors.ConveyorItem)
- uid: IndustrialValley.Machines.BaseMachine.OnSave
  commentId: M:IndustrialValley.Machines.BaseMachine.OnSave
  id: OnSave
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: OnSave()
  nameWithType: BaseMachine.OnSave()
  fullName: IndustrialValley.Machines.BaseMachine.OnSave()
  type: Method
  source:
    id: OnSave
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 114
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  example: []
  syntax:
    content: public virtual SaveableData OnSave()
    return:
      type: IndustrialValley.Saving.SaveableData
    content.vb: Public Overridable Function OnSave() As SaveableData
  overload: IndustrialValley.Machines.BaseMachine.OnSave*
  implements:
  - IndustrialValley.Saving.ISavable.OnSave
- uid: IndustrialValley.Machines.BaseMachine.OnLoad(IndustrialValley.Saving.SaveableData)
  commentId: M:IndustrialValley.Machines.BaseMachine.OnLoad(IndustrialValley.Saving.SaveableData)
  id: OnLoad(IndustrialValley.Saving.SaveableData)
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: OnLoad(SaveableData)
  nameWithType: BaseMachine.OnLoad(SaveableData)
  fullName: IndustrialValley.Machines.BaseMachine.OnLoad(IndustrialValley.Saving.SaveableData)
  type: Method
  source:
    id: OnLoad
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 119
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  example: []
  syntax:
    content: public virtual void OnLoad(SaveableData data)
    parameters:
    - id: data
      type: IndustrialValley.Saving.SaveableData
    content.vb: Public Overridable Sub OnLoad(data As SaveableData)
  overload: IndustrialValley.Machines.BaseMachine.OnLoad*
  implements:
  - IndustrialValley.Saving.ISavable.OnLoad(IndustrialValley.Saving.SaveableData)
- uid: IndustrialValley.Machines.BaseMachine.FindClosestDownstreamConveyor(IndustrialValley.Conveyors.ConveyorItem)
  commentId: M:IndustrialValley.Machines.BaseMachine.FindClosestDownstreamConveyor(IndustrialValley.Conveyors.ConveyorItem)
  id: FindClosestDownstreamConveyor(IndustrialValley.Conveyors.ConveyorItem)
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: FindClosestDownstreamConveyor(ConveyorItem)
  nameWithType: BaseMachine.FindClosestDownstreamConveyor(ConveyorItem)
  fullName: IndustrialValley.Machines.BaseMachine.FindClosestDownstreamConveyor(IndustrialValley.Conveyors.ConveyorItem)
  type: Method
  source:
    id: FindClosestDownstreamConveyor
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 129
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  summary: >-
    Round‐robin through each output gizmo + center:

    1) Tries OverlapSphere at each position.

    2) If that finds none, tries distance-based fallback from that position.

    Advances nextOutputIndex whenever a handoff is successful.
  example: []
  syntax:
    content: protected IConveyor FindClosestDownstreamConveyor(ConveyorItem item)
    parameters:
    - id: item
      type: IndustrialValley.Conveyors.ConveyorItem
    return:
      type: IndustrialValley.Conveyors.IConveyor
    content.vb: Protected Function FindClosestDownstreamConveyor(item As ConveyorItem) As IConveyor
  overload: IndustrialValley.Machines.BaseMachine.FindClosestDownstreamConveyor*
- uid: IndustrialValley.Machines.BaseMachine.OnItemInserted(IndustrialValley.Conveyors.ConveyorItem)
  commentId: M:IndustrialValley.Machines.BaseMachine.OnItemInserted(IndustrialValley.Conveyors.ConveyorItem)
  id: OnItemInserted(IndustrialValley.Conveyors.ConveyorItem)
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: OnItemInserted(ConveyorItem)
  nameWithType: BaseMachine.OnItemInserted(ConveyorItem)
  fullName: IndustrialValley.Machines.BaseMachine.OnItemInserted(IndustrialValley.Conveyors.ConveyorItem)
  type: Method
  source:
    id: OnItemInserted
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 175
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  syntax:
    content: protected virtual void OnItemInserted(ConveyorItem item)
    parameters:
    - id: item
      type: IndustrialValley.Conveyors.ConveyorItem
    content.vb: Protected Overridable Sub OnItemInserted(item As ConveyorItem)
  overload: IndustrialValley.Machines.BaseMachine.OnItemInserted*
- uid: IndustrialValley.Machines.BaseMachine.OutputItem(IndustrialValley.Conveyors.ConveyorItem)
  commentId: M:IndustrialValley.Machines.BaseMachine.OutputItem(IndustrialValley.Conveyors.ConveyorItem)
  id: OutputItem(IndustrialValley.Conveyors.ConveyorItem)
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: OutputItem(ConveyorItem)
  nameWithType: BaseMachine.OutputItem(ConveyorItem)
  fullName: IndustrialValley.Machines.BaseMachine.OutputItem(IndustrialValley.Conveyors.ConveyorItem)
  type: Method
  source:
    id: OutputItem
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 181
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  syntax:
    content: protected virtual bool OutputItem(ConveyorItem item)
    parameters:
    - id: item
      type: IndustrialValley.Conveyors.ConveyorItem
    return:
      type: System.Boolean
    content.vb: Protected Overridable Function OutputItem(item As ConveyorItem) As Boolean
  overload: IndustrialValley.Machines.BaseMachine.OutputItem*
- uid: IndustrialValley.Machines.BaseMachine.OnUpdate
  commentId: M:IndustrialValley.Machines.BaseMachine.OnUpdate
  id: OnUpdate
  parent: IndustrialValley.Machines.BaseMachine
  langs:
  - csharp
  - vb
  name: OnUpdate()
  nameWithType: BaseMachine.OnUpdate()
  fullName: IndustrialValley.Machines.BaseMachine.OnUpdate()
  type: Method
  source:
    id: OnUpdate
    path: F:\Unity Games\Industrial Valley\Industrial Valley\Assets\IndustrialValley\Scripts\Machines\BaseMachine.cs
    startLine: 199
  assemblies:
  - IndustrialValley
  namespace: IndustrialValley.Machines
  syntax:
    content: protected virtual void OnUpdate()
    content.vb: Protected Overridable Sub OnUpdate()
  overload: IndustrialValley.Machines.BaseMachine.OnUpdate*
references:
- uid: IndustrialValley.Machines
  commentId: N:IndustrialValley.Machines
  href: IndustrialValley.html
  name: IndustrialValley.Machines
  nameWithType: IndustrialValley.Machines
  fullName: IndustrialValley.Machines
  spec.csharp:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Machines
    name: Machines
    href: IndustrialValley.Machines.html
  spec.vb:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Machines
    name: Machines
    href: IndustrialValley.Machines.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Object
  commentId: T:UnityEngine.Object
  parent: UnityEngine
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: UnityEngine.Object
- uid: UnityEngine.Component
  commentId: T:UnityEngine.Component
  parent: UnityEngine
  isExternal: true
  name: Component
  nameWithType: Component
  fullName: UnityEngine.Component
- uid: UnityEngine.Behaviour
  commentId: T:UnityEngine.Behaviour
  parent: UnityEngine
  isExternal: true
  name: Behaviour
  nameWithType: Behaviour
  fullName: UnityEngine.Behaviour
- uid: UnityEngine.MonoBehaviour
  commentId: T:UnityEngine.MonoBehaviour
  parent: UnityEngine
  isExternal: true
  name: MonoBehaviour
  nameWithType: MonoBehaviour
  fullName: UnityEngine.MonoBehaviour
- uid: IndustrialValley.Conveyors.IConveyor
  commentId: T:IndustrialValley.Conveyors.IConveyor
  parent: IndustrialValley.Conveyors
  href: IndustrialValley.Conveyors.IConveyor.html
  name: IConveyor
  nameWithType: IConveyor
  fullName: IndustrialValley.Conveyors.IConveyor
- uid: IndustrialValley.Saving.ISavable
  commentId: T:IndustrialValley.Saving.ISavable
  parent: IndustrialValley.Saving
  href: IndustrialValley.Saving.ISavable.html
  name: ISavable
  nameWithType: ISavable
  fullName: IndustrialValley.Saving.ISavable
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine
  commentId: N:UnityEngine
  isExternal: true
  name: UnityEngine
  nameWithType: UnityEngine
  fullName: UnityEngine
- uid: IndustrialValley.Conveyors
  commentId: N:IndustrialValley.Conveyors
  href: IndustrialValley.html
  name: IndustrialValley.Conveyors
  nameWithType: IndustrialValley.Conveyors
  fullName: IndustrialValley.Conveyors
  spec.csharp:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Conveyors
    name: Conveyors
    href: IndustrialValley.Conveyors.html
  spec.vb:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Conveyors
    name: Conveyors
    href: IndustrialValley.Conveyors.html
- uid: IndustrialValley.Saving
  commentId: N:IndustrialValley.Saving
  href: IndustrialValley.html
  name: IndustrialValley.Saving
  nameWithType: IndustrialValley.Saving
  fullName: IndustrialValley.Saving
  spec.csharp:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Saving
    name: Saving
    href: IndustrialValley.Saving.html
  spec.vb:
  - uid: IndustrialValley
    name: IndustrialValley
    href: IndustrialValley.html
  - name: .
  - uid: IndustrialValley.Saving
    name: Saving
    href: IndustrialValley.Saving.html
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector3[]
  isExternal: true
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: UnityEngine.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: UnityEngine.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: (
  - name: )
- uid: IndustrialValley.Machines.BaseMachine.InsertItem*
  commentId: Overload:IndustrialValley.Machines.BaseMachine.InsertItem
  href: IndustrialValley.Machines.BaseMachine.InsertItem.html#IndustrialValley_Machines_BaseMachine_InsertItem_IndustrialValley_Conveyors_ConveyorItem_
  name: InsertItem
  nameWithType: BaseMachine.InsertItem
  fullName: IndustrialValley.Machines.BaseMachine.InsertItem
- uid: IndustrialValley.Conveyors.IConveyor.InsertItem(IndustrialValley.Conveyors.ConveyorItem)
  commentId: M:IndustrialValley.Conveyors.IConveyor.InsertItem(IndustrialValley.Conveyors.ConveyorItem)
  parent: IndustrialValley.Conveyors.IConveyor
  href: IndustrialValley.Conveyors.IConveyor.InsertItem.html#IndustrialValley_Conveyors_IConveyor_InsertItem_IndustrialValley_Conveyors_ConveyorItem_
  name: InsertItem(ConveyorItem)
  nameWithType: IConveyor.InsertItem(ConveyorItem)
  fullName: IndustrialValley.Conveyors.IConveyor.InsertItem(IndustrialValley.Conveyors.ConveyorItem)
  spec.csharp:
  - uid: IndustrialValley.Conveyors.IConveyor.InsertItem(IndustrialValley.Conveyors.ConveyorItem)
    name: InsertItem
    href: IndustrialValley.Conveyors.IConveyor.InsertItem.html#IndustrialValley_Conveyors_IConveyor_InsertItem_IndustrialValley_Conveyors_ConveyorItem_
  - name: (
  - uid: IndustrialValley.Conveyors.ConveyorItem
    name: ConveyorItem
    href: IndustrialValley.Conveyors.ConveyorItem.html
  - name: )
  spec.vb:
  - uid: IndustrialValley.Conveyors.IConveyor.InsertItem(IndustrialValley.Conveyors.ConveyorItem)
    name: InsertItem
    href: IndustrialValley.Conveyors.IConveyor.InsertItem.html#IndustrialValley_Conveyors_IConveyor_InsertItem_IndustrialValley_Conveyors_ConveyorItem_
  - name: (
  - uid: IndustrialValley.Conveyors.ConveyorItem
    name: ConveyorItem
    href: IndustrialValley.Conveyors.ConveyorItem.html
  - name: )
- uid: IndustrialValley.Conveyors.ConveyorItem
  commentId: T:IndustrialValley.Conveyors.ConveyorItem
  parent: IndustrialValley.Conveyors
  href: IndustrialValley.Conveyors.ConveyorItem.html
  name: ConveyorItem
  nameWithType: ConveyorItem
  fullName: IndustrialValley.Conveyors.ConveyorItem
- uid: IndustrialValley.Machines.BaseMachine.GetInputPositions*
  commentId: Overload:IndustrialValley.Machines.BaseMachine.GetInputPositions
  href: IndustrialValley.Machines.BaseMachine.GetInputPositions.html#IndustrialValley_Machines_BaseMachine_GetInputPositions
  name: GetInputPositions
  nameWithType: BaseMachine.GetInputPositions
  fullName: IndustrialValley.Machines.BaseMachine.GetInputPositions
- uid: IndustrialValley.Conveyors.IConveyor.GetInputPositions
  commentId: M:IndustrialValley.Conveyors.IConveyor.GetInputPositions
  parent: IndustrialValley.Conveyors.IConveyor
  href: IndustrialValley.Conveyors.IConveyor.GetInputPositions.html#IndustrialValley_Conveyors_IConveyor_GetInputPositions
  name: GetInputPositions()
  nameWithType: IConveyor.GetInputPositions()
  fullName: IndustrialValley.Conveyors.IConveyor.GetInputPositions()
  spec.csharp:
  - uid: IndustrialValley.Conveyors.IConveyor.GetInputPositions
    name: GetInputPositions
    href: IndustrialValley.Conveyors.IConveyor.GetInputPositions.html#IndustrialValley_Conveyors_IConveyor_GetInputPositions
  - name: (
  - name: )
  spec.vb:
  - uid: IndustrialValley.Conveyors.IConveyor.GetInputPositions
    name: GetInputPositions
    href: IndustrialValley.Conveyors.IConveyor.GetInputPositions.html#IndustrialValley_Conveyors_IConveyor_GetInputPositions
  - name: (
  - name: )
- uid: System.Collections.Generic.List{UnityEngine.Vector3}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector3>
  nameWithType: List<Vector3>
  fullName: System.Collections.Generic.List<UnityEngine.Vector3>
  nameWithType.vb: List(Of Vector3)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector3)
  name.vb: List(Of Vector3)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: IndustrialValley.Machines.BaseMachine.GetOutputPositions*
  commentId: Overload:IndustrialValley.Machines.BaseMachine.GetOutputPositions
  href: IndustrialValley.Machines.BaseMachine.GetOutputPositions.html#IndustrialValley_Machines_BaseMachine_GetOutputPositions
  name: GetOutputPositions
  nameWithType: BaseMachine.GetOutputPositions
  fullName: IndustrialValley.Machines.BaseMachine.GetOutputPositions
- uid: IndustrialValley.Conveyors.IConveyor.GetOutputPositions
  commentId: M:IndustrialValley.Conveyors.IConveyor.GetOutputPositions
  parent: IndustrialValley.Conveyors.IConveyor
  href: IndustrialValley.Conveyors.IConveyor.GetOutputPositions.html#IndustrialValley_Conveyors_IConveyor_GetOutputPositions
  name: GetOutputPositions()
  nameWithType: IConveyor.GetOutputPositions()
  fullName: IndustrialValley.Conveyors.IConveyor.GetOutputPositions()
  spec.csharp:
  - uid: IndustrialValley.Conveyors.IConveyor.GetOutputPositions
    name: GetOutputPositions
    href: IndustrialValley.Conveyors.IConveyor.GetOutputPositions.html#IndustrialValley_Conveyors_IConveyor_GetOutputPositions
  - name: (
  - name: )
  spec.vb:
  - uid: IndustrialValley.Conveyors.IConveyor.GetOutputPositions
    name: GetOutputPositions
    href: IndustrialValley.Conveyors.IConveyor.GetOutputPositions.html#IndustrialValley_Conveyors_IConveyor_GetOutputPositions
  - name: (
  - name: )
- uid: IndustrialValley.Machines.BaseMachine.CanAcceptItem*
  commentId: Overload:IndustrialValley.Machines.BaseMachine.CanAcceptItem
  href: IndustrialValley.Machines.BaseMachine.CanAcceptItem.html#IndustrialValley_Machines_BaseMachine_CanAcceptItem_IndustrialValley_Conveyors_ConveyorItem_
  name: CanAcceptItem
  nameWithType: BaseMachine.CanAcceptItem
  fullName: IndustrialValley.Machines.BaseMachine.CanAcceptItem
- uid: IndustrialValley.Conveyors.IConveyor.CanAcceptItem(IndustrialValley.Conveyors.ConveyorItem)
  commentId: M:IndustrialValley.Conveyors.IConveyor.CanAcceptItem(IndustrialValley.Conveyors.ConveyorItem)
  parent: IndustrialValley.Conveyors.IConveyor
  href: IndustrialValley.Conveyors.IConveyor.CanAcceptItem.html#IndustrialValley_Conveyors_IConveyor_CanAcceptItem_IndustrialValley_Conveyors_ConveyorItem_
  name: CanAcceptItem(ConveyorItem)
  nameWithType: IConveyor.CanAcceptItem(ConveyorItem)
  fullName: IndustrialValley.Conveyors.IConveyor.CanAcceptItem(IndustrialValley.Conveyors.ConveyorItem)
  spec.csharp:
  - uid: IndustrialValley.Conveyors.IConveyor.CanAcceptItem(IndustrialValley.Conveyors.ConveyorItem)
    name: CanAcceptItem
    href: IndustrialValley.Conveyors.IConveyor.CanAcceptItem.html#IndustrialValley_Conveyors_IConveyor_CanAcceptItem_IndustrialValley_Conveyors_ConveyorItem_
  - name: (
  - uid: IndustrialValley.Conveyors.ConveyorItem
    name: ConveyorItem
    href: IndustrialValley.Conveyors.ConveyorItem.html
  - name: )
  spec.vb:
  - uid: IndustrialValley.Conveyors.IConveyor.CanAcceptItem(IndustrialValley.Conveyors.ConveyorItem)
    name: CanAcceptItem
    href: IndustrialValley.Conveyors.IConveyor.CanAcceptItem.html#IndustrialValley_Conveyors_IConveyor_CanAcceptItem_IndustrialValley_Conveyors_ConveyorItem_
  - name: (
  - uid: IndustrialValley.Conveyors.ConveyorItem
    name: ConveyorItem
    href: IndustrialValley.Conveyors.ConveyorItem.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: IndustrialValley.Machines.BaseMachine.OnSave*
  commentId: Overload:IndustrialValley.Machines.BaseMachine.OnSave
  href: IndustrialValley.Machines.BaseMachine.OnSave.html#IndustrialValley_Machines_BaseMachine_OnSave
  name: OnSave
  nameWithType: BaseMachine.OnSave
  fullName: IndustrialValley.Machines.BaseMachine.OnSave
- uid: IndustrialValley.Saving.ISavable.OnSave
  commentId: M:IndustrialValley.Saving.ISavable.OnSave
  parent: IndustrialValley.Saving.ISavable
  href: IndustrialValley.Saving.ISavable.OnSave.html#IndustrialValley_Saving_ISavable_OnSave
  name: OnSave()
  nameWithType: ISavable.OnSave()
  fullName: IndustrialValley.Saving.ISavable.OnSave()
  spec.csharp:
  - uid: IndustrialValley.Saving.ISavable.OnSave
    name: OnSave
    href: IndustrialValley.Saving.ISavable.OnSave.html#IndustrialValley_Saving_ISavable_OnSave
  - name: (
  - name: )
  spec.vb:
  - uid: IndustrialValley.Saving.ISavable.OnSave
    name: OnSave
    href: IndustrialValley.Saving.ISavable.OnSave.html#IndustrialValley_Saving_ISavable_OnSave
  - name: (
  - name: )
- uid: IndustrialValley.Saving.SaveableData
  commentId: T:IndustrialValley.Saving.SaveableData
  parent: IndustrialValley.Saving
  href: IndustrialValley.Saving.SaveableData.html
  name: SaveableData
  nameWithType: SaveableData
  fullName: IndustrialValley.Saving.SaveableData
- uid: IndustrialValley.Machines.BaseMachine.OnLoad*
  commentId: Overload:IndustrialValley.Machines.BaseMachine.OnLoad
  href: IndustrialValley.Machines.BaseMachine.OnLoad.html#IndustrialValley_Machines_BaseMachine_OnLoad_IndustrialValley_Saving_SaveableData_
  name: OnLoad
  nameWithType: BaseMachine.OnLoad
  fullName: IndustrialValley.Machines.BaseMachine.OnLoad
- uid: IndustrialValley.Saving.ISavable.OnLoad(IndustrialValley.Saving.SaveableData)
  commentId: M:IndustrialValley.Saving.ISavable.OnLoad(IndustrialValley.Saving.SaveableData)
  parent: IndustrialValley.Saving.ISavable
  href: IndustrialValley.Saving.ISavable.OnLoad.html#IndustrialValley_Saving_ISavable_OnLoad_IndustrialValley_Saving_SaveableData_
  name: OnLoad(SaveableData)
  nameWithType: ISavable.OnLoad(SaveableData)
  fullName: IndustrialValley.Saving.ISavable.OnLoad(IndustrialValley.Saving.SaveableData)
  spec.csharp:
  - uid: IndustrialValley.Saving.ISavable.OnLoad(IndustrialValley.Saving.SaveableData)
    name: OnLoad
    href: IndustrialValley.Saving.ISavable.OnLoad.html#IndustrialValley_Saving_ISavable_OnLoad_IndustrialValley_Saving_SaveableData_
  - name: (
  - uid: IndustrialValley.Saving.SaveableData
    name: SaveableData
    href: IndustrialValley.Saving.SaveableData.html
  - name: )
  spec.vb:
  - uid: IndustrialValley.Saving.ISavable.OnLoad(IndustrialValley.Saving.SaveableData)
    name: OnLoad
    href: IndustrialValley.Saving.ISavable.OnLoad.html#IndustrialValley_Saving_ISavable_OnLoad_IndustrialValley_Saving_SaveableData_
  - name: (
  - uid: IndustrialValley.Saving.SaveableData
    name: SaveableData
    href: IndustrialValley.Saving.SaveableData.html
  - name: )
- uid: IndustrialValley.Machines.BaseMachine.FindClosestDownstreamConveyor*
  commentId: Overload:IndustrialValley.Machines.BaseMachine.FindClosestDownstreamConveyor
  href: IndustrialValley.Machines.BaseMachine.FindClosestDownstreamConveyor.html#IndustrialValley_Machines_BaseMachine_FindClosestDownstreamConveyor_IndustrialValley_Conveyors_ConveyorItem_
  name: FindClosestDownstreamConveyor
  nameWithType: BaseMachine.FindClosestDownstreamConveyor
  fullName: IndustrialValley.Machines.BaseMachine.FindClosestDownstreamConveyor
- uid: IndustrialValley.Machines.BaseMachine.OnItemInserted*
  commentId: Overload:IndustrialValley.Machines.BaseMachine.OnItemInserted
  href: IndustrialValley.Machines.BaseMachine.OnItemInserted.html#IndustrialValley_Machines_BaseMachine_OnItemInserted_IndustrialValley_Conveyors_ConveyorItem_
  name: OnItemInserted
  nameWithType: BaseMachine.OnItemInserted
  fullName: IndustrialValley.Machines.BaseMachine.OnItemInserted
- uid: IndustrialValley.Machines.BaseMachine.OutputItem*
  commentId: Overload:IndustrialValley.Machines.BaseMachine.OutputItem
  href: IndustrialValley.Machines.BaseMachine.OutputItem.html#IndustrialValley_Machines_BaseMachine_OutputItem_IndustrialValley_Conveyors_ConveyorItem_
  name: OutputItem
  nameWithType: BaseMachine.OutputItem
  fullName: IndustrialValley.Machines.BaseMachine.OutputItem
- uid: IndustrialValley.Machines.BaseMachine.OnUpdate*
  commentId: Overload:IndustrialValley.Machines.BaseMachine.OnUpdate
  href: IndustrialValley.Machines.BaseMachine.OnUpdate.html#IndustrialValley_Machines_BaseMachine_OnUpdate
  name: OnUpdate
  nameWithType: BaseMachine.OnUpdate
  fullName: IndustrialValley.Machines.BaseMachine.OnUpdate
memberLayout: SeparatePages
